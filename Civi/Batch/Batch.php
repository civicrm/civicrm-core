<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Batch/Batch.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Batch;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * Batch
 *
 * @ORM\Table(name="civicrm_batch", uniqueConstraints={@ORM\UniqueConstraint(name="UI_name", columns={"name"})}, indexes={@ORM\Index(name="FK_civicrm_batch_created_id", columns={"created_id"}),@ORM\Index(name="FK_civicrm_batch_modified_id", columns={"modified_id"}),@ORM\Index(name="FK_civicrm_batch_saved_search_id", columns={"saved_search_id"})})
 * @ORM\Entity
 */
class Batch extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=64, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var string
   *
   * @ORM\Column(name="title", type="string", length=64, nullable=true)
   * 
   */
  private $title;
  
  /**
   * @var text
   *
   * @ORM\Column(name="description", type="text", nullable=true)
   * 
   */
  private $description;
  
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="created_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $created;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="created_date", type="datetime", nullable=true)
   * 
   */
  private $createdDate;
  
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="modified_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $modified;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="modified_date", type="datetime", nullable=true)
   * 
   */
  private $modifiedDate;
  
  /**
   * @var \Civi\Contact\SavedSearch
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\SavedSearch")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="saved_search_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $savedSearch;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="status_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $statusId;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="type_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $typeId;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="mode_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $modeId;
  
  /**
   * @var float
   *
   * @ORM\Column(name="total", type="float", nullable=true)
   * 
   */
  private $total;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="item_count", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $itemCount;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="payment_instrument_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $paymentInstrumentId;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="exported_date", type="datetime", nullable=true)
   * 
   */
  private $exportedDate;
  
  /**
   * @var text
   *
   * @ORM\Column(name="data", type="text", nullable=true)
   * 
   */
  private $data;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set name
   *
   * @param string $name
   * @return Batch
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set title
   *
   * @param string $title
   * @return Batch
   */
  public function setTitle($title) {
    $this->title = $title;
    return $this;
  }

  /**
   * Get title
   *
   * @return string
   */
  public function getTitle() {
    return $this->title;
  }
  
  /**
   * Set description
   *
   * @param text $description
   * @return Batch
   */
  public function setDescription($description) {
    $this->description = $description;
    return $this;
  }

  /**
   * Get description
   *
   * @return text
   */
  public function getDescription() {
    return $this->description;
  }
  
  /**
   * Set created
   *
   * @param \Civi\Contact\Contact $created
   * @return Batch
   */
  public function setCreated(\Civi\Contact\Contact $created = null) {
    $this->created = $created;
    return $this;
  }

  /**
   * Get created
   *
   * @return \Civi\Contact\Contact
   */
  public function getCreated() {
    return $this->created;
  }
  
  /**
   * Set createdDate
   *
   * @param datetime $createdDate
   * @return Batch
   */
  public function setCreatedDate($createdDate) {
    $this->createdDate = $createdDate;
    return $this;
  }

  /**
   * Get createdDate
   *
   * @return datetime
   */
  public function getCreatedDate() {
    return $this->createdDate;
  }
  
  /**
   * Set modified
   *
   * @param \Civi\Contact\Contact $modified
   * @return Batch
   */
  public function setModified(\Civi\Contact\Contact $modified = null) {
    $this->modified = $modified;
    return $this;
  }

  /**
   * Get modified
   *
   * @return \Civi\Contact\Contact
   */
  public function getModified() {
    return $this->modified;
  }
  
  /**
   * Set modifiedDate
   *
   * @param datetime $modifiedDate
   * @return Batch
   */
  public function setModifiedDate($modifiedDate) {
    $this->modifiedDate = $modifiedDate;
    return $this;
  }

  /**
   * Get modifiedDate
   *
   * @return datetime
   */
  public function getModifiedDate() {
    return $this->modifiedDate;
  }
  
  /**
   * Set savedSearch
   *
   * @param \Civi\Contact\SavedSearch $savedSearch
   * @return Batch
   */
  public function setSavedSearch(\Civi\Contact\SavedSearch $savedSearch = null) {
    $this->savedSearch = $savedSearch;
    return $this;
  }

  /**
   * Get savedSearch
   *
   * @return \Civi\Contact\SavedSearch
   */
  public function getSavedSearch() {
    return $this->savedSearch;
  }
  
  /**
   * Set statusId
   *
   * @param integer $statusId
   * @return Batch
   */
  public function setStatusId($statusId) {
    $this->statusId = $statusId;
    return $this;
  }

  /**
   * Get statusId
   *
   * @return integer
   */
  public function getStatusId() {
    return $this->statusId;
  }
  
  /**
   * Set typeId
   *
   * @param integer $typeId
   * @return Batch
   */
  public function setTypeId($typeId) {
    $this->typeId = $typeId;
    return $this;
  }

  /**
   * Get typeId
   *
   * @return integer
   */
  public function getTypeId() {
    return $this->typeId;
  }
  
  /**
   * Set modeId
   *
   * @param integer $modeId
   * @return Batch
   */
  public function setModeId($modeId) {
    $this->modeId = $modeId;
    return $this;
  }

  /**
   * Get modeId
   *
   * @return integer
   */
  public function getModeId() {
    return $this->modeId;
  }
  
  /**
   * Set total
   *
   * @param float $total
   * @return Batch
   */
  public function setTotal($total) {
    $this->total = $total;
    return $this;
  }

  /**
   * Get total
   *
   * @return float
   */
  public function getTotal() {
    return $this->total;
  }
  
  /**
   * Set itemCount
   *
   * @param integer $itemCount
   * @return Batch
   */
  public function setItemCount($itemCount) {
    $this->itemCount = $itemCount;
    return $this;
  }

  /**
   * Get itemCount
   *
   * @return integer
   */
  public function getItemCount() {
    return $this->itemCount;
  }
  
  /**
   * Set paymentInstrumentId
   *
   * @param integer $paymentInstrumentId
   * @return Batch
   */
  public function setPaymentInstrumentId($paymentInstrumentId) {
    $this->paymentInstrumentId = $paymentInstrumentId;
    return $this;
  }

  /**
   * Get paymentInstrumentId
   *
   * @return integer
   */
  public function getPaymentInstrumentId() {
    return $this->paymentInstrumentId;
  }
  
  /**
   * Set exportedDate
   *
   * @param datetime $exportedDate
   * @return Batch
   */
  public function setExportedDate($exportedDate) {
    $this->exportedDate = $exportedDate;
    return $this;
  }

  /**
   * Get exportedDate
   *
   * @return datetime
   */
  public function getExportedDate() {
    return $this->exportedDate;
  }
  
  /**
   * Set data
   *
   * @param text $data
   * @return Batch
   */
  public function setData($data) {
    $this->data = $data;
    return $this;
  }

  /**
   * Get data
   *
   * @return text
   */
  public function getData() {
    return $this->data;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'name' => array(
      
        'name' => 'name',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Name'),
                                 'maxlength' => 64,
                         'size' => CRM_Utils_Type::BIG,
                           
                                    
                          ),
      
              'title' => array(
      
        'name' => 'title',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Title'),
                                 'maxlength' => 64,
                         'size' => CRM_Utils_Type::BIG,
                           
                                    
                          ),
      
              'description' => array(
      
        'name' => 'description',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Description'),
                                                   'rows' => 4,
                         'cols' => 80,
         
                                    
                          ),
      
              'created_id' => array(
      
        'name' => 'created_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                'FKClassName' => 'CRM_Contact_Contact',
                          ),
      
              'created_date' => array(
      
        'name' => 'created_date',
        'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
                'title' => ts('Created Date'),
                                                     
                                    
                          ),
      
              'modified_id' => array(
      
        'name' => 'modified_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                'FKClassName' => 'CRM_Contact_Contact',
                          ),
      
              'modified_date' => array(
      
        'name' => 'modified_date',
        'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
                'title' => ts('Modified Date'),
                                                     
                                    
                          ),
      
              'saved_search_id' => array(
      
        'name' => 'saved_search_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                'FKClassName' => 'CRM_Contact_SavedSearch',
                          ),
      
              'status_id' => array(
      
        'name' => 'status_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                                     'pseudoconstant' => array(
                                'optionGroupName' => 'batch_status',
                    )
                 ),
      
              'type_id' => array(
      
        'name' => 'type_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                                     'pseudoconstant' => array(
                                'optionGroupName' => 'batch_type',
                    )
                 ),
      
              'mode_id' => array(
      
        'name' => 'mode_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                                     'pseudoconstant' => array(
                                'optionGroupName' => 'batch_mode',
                    )
                 ),
      
              'total' => array(
      
        'name' => 'total',
        'type' => CRM_Utils_Type::T_MONEY,
                'title' => ts('Total'),
                                                     
                                    
                          ),
      
              'item_count' => array(
      
        'name' => 'item_count',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Item Count'),
                                                     
                                    
                          ),
      
              'payment_instrument_id' => array(
      
        'name' => 'payment_instrument_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                                     'pseudoconstant' => array(
                                'optionGroupName' => 'payment_instrument',
                    )
                 ),
      
              'exported_date' => array(
      
        'name' => 'exported_date',
        'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
                'title' => ts('Exported Date'),
                                                     
                                    
                          ),
      
              'data' => array(
      
        'name' => 'data',
        'type' => CRM_Utils_Type::T_LONGTEXT,
                'title' => ts('Data'),
                                                     
                                    
                          ),
             );
    }
    return self::$_fields;
  }

}

