<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Mailing/MailingJob.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * MailingJob
 *
 * @ORM\Table(name="civicrm_mailing_job", indexes={@ORM\Index(name="FK_civicrm_mailing_job_mailing_id", columns={"mailing_id"}),@ORM\Index(name="FK_civicrm_mailing_job_parent_id", columns={"parent_id"})})
 * @ORM\Entity
 */
class MailingJob extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Mailing\Mailing
   *
   * @ORM\ManyToOne(targetEntity="Civi\Mailing\Mailing")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="mailing_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $mailing;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="scheduled_date", type="datetime", nullable=true)
   * 
   */
  private $scheduledDate;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="start_date", type="datetime", nullable=true)
   * 
   */
  private $startDate;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="end_date", type="datetime", nullable=true)
   * 
   */
  private $endDate;
  
  /**
   * @var string
   *
   * @ORM\Column(name="status", type="string", length=12, nullable=true)
   * 
   */
  private $status;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_test", type="boolean", nullable=false)
   * 
   */
  private $isTest = '0';
  
  /**
   * @var string
   *
   * @ORM\Column(name="job_type", type="string", length=255, nullable=true)
   * 
   */
  private $jobType;
  
  /**
   * @var \Civi\Mailing\MailingJob
   *
   * @ORM\ManyToOne(targetEntity="Civi\Mailing\MailingJob")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="parent_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $parent = 'NULL';
  
  /**
   * @var int
   *
   * @ORM\Column(name="job_offset", type="int", nullable=false)
   * 
   */
  private $jobOffset = '0';
  
  /**
   * @var int
   *
   * @ORM\Column(name="job_limit", type="int", nullable=false)
   * 
   */
  private $jobLimit = '0';

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set mailing
   *
   * @param \Civi\Mailing\Mailing $mailing
   * @return MailingJob
   */
  public function setMailing(\Civi\Mailing\Mailing $mailing = null) {
    $this->mailing = $mailing;
    return $this;
  }

  /**
   * Get mailing
   *
   * @return \Civi\Mailing\Mailing
   */
  public function getMailing() {
    return $this->mailing;
  }
  
  /**
   * Set scheduledDate
   *
   * @param datetime $scheduledDate
   * @return MailingJob
   */
  public function setScheduledDate($scheduledDate) {
    $this->scheduledDate = $scheduledDate;
    return $this;
  }

  /**
   * Get scheduledDate
   *
   * @return datetime
   */
  public function getScheduledDate() {
    return $this->scheduledDate;
  }
  
  /**
   * Set startDate
   *
   * @param datetime $startDate
   * @return MailingJob
   */
  public function setStartDate($startDate) {
    $this->startDate = $startDate;
    return $this;
  }

  /**
   * Get startDate
   *
   * @return datetime
   */
  public function getStartDate() {
    return $this->startDate;
  }
  
  /**
   * Set endDate
   *
   * @param datetime $endDate
   * @return MailingJob
   */
  public function setEndDate($endDate) {
    $this->endDate = $endDate;
    return $this;
  }

  /**
   * Get endDate
   *
   * @return datetime
   */
  public function getEndDate() {
    return $this->endDate;
  }
  
  /**
   * Set status
   *
   * @param string $status
   * @return MailingJob
   */
  public function setStatus($status) {
    $this->status = $status;
    return $this;
  }

  /**
   * Get status
   *
   * @return string
   */
  public function getStatus() {
    return $this->status;
  }
  
  /**
   * Set isTest
   *
   * @param boolean $isTest
   * @return MailingJob
   */
  public function setIsTest($isTest) {
    $this->isTest = $isTest;
    return $this;
  }

  /**
   * Get isTest
   *
   * @return boolean
   */
  public function getIsTest() {
    return $this->isTest;
  }
  
  /**
   * Set jobType
   *
   * @param string $jobType
   * @return MailingJob
   */
  public function setJobType($jobType) {
    $this->jobType = $jobType;
    return $this;
  }

  /**
   * Get jobType
   *
   * @return string
   */
  public function getJobType() {
    return $this->jobType;
  }
  
  /**
   * Set parent
   *
   * @param \Civi\Mailing\MailingJob $parent
   * @return MailingJob
   */
  public function setParent(\Civi\Mailing\MailingJob $parent = null) {
    $this->parent = $parent;
    return $this;
  }

  /**
   * Get parent
   *
   * @return \Civi\Mailing\MailingJob
   */
  public function getParent() {
    return $this->parent;
  }
  
  /**
   * Set jobOffset
   *
   * @param int $jobOffset
   * @return MailingJob
   */
  public function setJobOffset($jobOffset) {
    $this->jobOffset = $jobOffset;
    return $this;
  }

  /**
   * Get jobOffset
   *
   * @return int
   */
  public function getJobOffset() {
    return $this->jobOffset;
  }
  
  /**
   * Set jobLimit
   *
   * @param int $jobLimit
   * @return MailingJob
   */
  public function setJobLimit($jobLimit) {
    $this->jobLimit = $jobLimit;
    return $this;
  }

  /**
   * Get jobLimit
   *
   * @return int
   */
  public function getJobLimit() {
    return $this->jobLimit;
  }

}

