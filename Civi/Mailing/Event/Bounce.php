<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Mailing/Event/Bounce.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * Bounce
 *
 * @ORM\Table(name="civicrm_mailing_event_bounce", indexes={@ORM\Index(name="FK_civicrm_mailing_event_bounce_event_queue_id", columns={"event_queue_id"})})
 * @ORM\Entity
 */
class Bounce extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Mailing\Event\Queue
   *
   * @ORM\ManyToOne(targetEntity="Civi\Mailing\Event\Queue")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="event_queue_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $eventQueue;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="bounce_type_id", type="integer", nullable=true)
   * 
   */
  private $bounceTypeId;
  
  /**
   * @var string
   *
   * @ORM\Column(name="bounce_reason", type="string", length=255, nullable=true)
   * 
   */
  private $bounceReason;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="time_stamp", type="datetime", nullable=true)
   * 
   */
  private $timeStamp;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set eventQueue
   *
   * @param \Civi\Mailing\Event\Queue $eventQueue
   * @return Bounce
   */
  public function setEventQueue(\Civi\Mailing\Event\Queue $eventQueue = null) {
    $this->eventQueue = $eventQueue;
    return $this;
  }

  /**
   * Get eventQueue
   *
   * @return \Civi\Mailing\Event\Queue
   */
  public function getEventQueue() {
    return $this->eventQueue;
  }
  
  /**
   * Set bounceTypeId
   *
   * @param integer $bounceTypeId
   * @return Bounce
   */
  public function setBounceTypeId($bounceTypeId) {
    $this->bounceTypeId = $bounceTypeId;
    return $this;
  }

  /**
   * Get bounceTypeId
   *
   * @return integer
   */
  public function getBounceTypeId() {
    return $this->bounceTypeId;
  }
  
  /**
   * Set bounceReason
   *
   * @param string $bounceReason
   * @return Bounce
   */
  public function setBounceReason($bounceReason) {
    $this->bounceReason = $bounceReason;
    return $this;
  }

  /**
   * Get bounceReason
   *
   * @return string
   */
  public function getBounceReason() {
    return $this->bounceReason;
  }
  
  /**
   * Set timeStamp
   *
   * @param datetime $timeStamp
   * @return Bounce
   */
  public function setTimeStamp($timeStamp) {
    $this->timeStamp = $timeStamp;
    return $this;
  }

  /**
   * Get timeStamp
   *
   * @return datetime
   */
  public function getTimeStamp() {
    return $this->timeStamp;
  }

}

