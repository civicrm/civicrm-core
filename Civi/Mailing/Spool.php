<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Mailing/Spool.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * Spool
 *
 * @ORM\Table(name="civicrm_mailing_spool", indexes={@ORM\Index(name="FK_civicrm_mailing_spool_job_id", columns={"job_id"})})
 * @ORM\Entity
 */
class Spool extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Mailing\MailingJob
   *
   * @ORM\ManyToOne(targetEntity="Civi\Mailing\MailingJob")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="job_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $job;
  
  /**
   * @var text
   *
   * @ORM\Column(name="recipient_email", type="text", nullable=true)
   * 
   */
  private $recipientEmail;
  
  /**
   * @var text
   *
   * @ORM\Column(name="headers", type="text", nullable=true)
   * 
   */
  private $headers;
  
  /**
   * @var text
   *
   * @ORM\Column(name="body", type="text", nullable=true)
   * 
   */
  private $body;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="added_at", type="datetime", nullable=true)
   * 
   */
  private $addedAt;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="removed_at", type="datetime", nullable=true)
   * 
   */
  private $removedAt;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set job
   *
   * @param \Civi\Mailing\MailingJob $job
   * @return Spool
   */
  public function setJob(\Civi\Mailing\MailingJob $job = null) {
    $this->job = $job;
    return $this;
  }

  /**
   * Get job
   *
   * @return \Civi\Mailing\MailingJob
   */
  public function getJob() {
    return $this->job;
  }
  
  /**
   * Set recipientEmail
   *
   * @param text $recipientEmail
   * @return Spool
   */
  public function setRecipientEmail($recipientEmail) {
    $this->recipientEmail = $recipientEmail;
    return $this;
  }

  /**
   * Get recipientEmail
   *
   * @return text
   */
  public function getRecipientEmail() {
    return $this->recipientEmail;
  }
  
  /**
   * Set headers
   *
   * @param text $headers
   * @return Spool
   */
  public function setHeaders($headers) {
    $this->headers = $headers;
    return $this;
  }

  /**
   * Get headers
   *
   * @return text
   */
  public function getHeaders() {
    return $this->headers;
  }
  
  /**
   * Set body
   *
   * @param text $body
   * @return Spool
   */
  public function setBody($body) {
    $this->body = $body;
    return $this;
  }

  /**
   * Get body
   *
   * @return text
   */
  public function getBody() {
    return $this->body;
  }
  
  /**
   * Set addedAt
   *
   * @param datetime $addedAt
   * @return Spool
   */
  public function setAddedAt($addedAt) {
    $this->addedAt = $addedAt;
    return $this;
  }

  /**
   * Get addedAt
   *
   * @return datetime
   */
  public function getAddedAt() {
    return $this->addedAt;
  }
  
  /**
   * Set removedAt
   *
   * @param datetime $removedAt
   * @return Spool
   */
  public function setRemovedAt($removedAt) {
    $this->removedAt = $removedAt;
    return $this;
  }

  /**
   * Get removedAt
   *
   * @return datetime
   */
  public function getRemovedAt() {
    return $this->removedAt;
  }

}

