<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Mailing/MailingGroup.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Mailing;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * MailingGroup
 *
 * @ORM\Table(name="civicrm_mailing_group", indexes={@ORM\Index(name="FK_civicrm_mailing_group_mailing_id", columns={"mailing_id"})})
 * @ORM\Entity
 */
class MailingGroup extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Mailing\Mailing
   *
   * @ORM\ManyToOne(targetEntity="Civi\Mailing\Mailing")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="mailing_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $mailing;
  
  /**
   * @var string
   *
   * @ORM\Column(name="group_type", type="string", length=8, nullable=true)
   * 
   */
  private $groupType;
  
  /**
   * @var string
   *
   * @ORM\Column(name="entity_table", type="string", length=64, nullable=true)
   * 
   */
  private $entityTable;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="entity_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $entityId;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="search_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $searchId;
  
  /**
   * @var text
   *
   * @ORM\Column(name="search_args", type="text", nullable=true)
   * 
   */
  private $searchArgs;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set mailing
   *
   * @param \Civi\Mailing\Mailing $mailing
   * @return MailingGroup
   */
  public function setMailing(\Civi\Mailing\Mailing $mailing = null) {
    $this->mailing = $mailing;
    return $this;
  }

  /**
   * Get mailing
   *
   * @return \Civi\Mailing\Mailing
   */
  public function getMailing() {
    return $this->mailing;
  }
  
  /**
   * Set groupType
   *
   * @param string $groupType
   * @return MailingGroup
   */
  public function setGroupType($groupType) {
    $this->groupType = $groupType;
    return $this;
  }

  /**
   * Get groupType
   *
   * @return string
   */
  public function getGroupType() {
    return $this->groupType;
  }
  
  /**
   * Set entityTable
   *
   * @param string $entityTable
   * @return MailingGroup
   */
  public function setEntityTable($entityTable) {
    $this->entityTable = $entityTable;
    return $this;
  }

  /**
   * Get entityTable
   *
   * @return string
   */
  public function getEntityTable() {
    return $this->entityTable;
  }
  
  /**
   * Set entityId
   *
   * @param integer $entityId
   * @return MailingGroup
   */
  public function setEntityId($entityId) {
    $this->entityId = $entityId;
    return $this;
  }

  /**
   * Get entityId
   *
   * @return integer
   */
  public function getEntityId() {
    return $this->entityId;
  }
  
  /**
   * Set searchId
   *
   * @param integer $searchId
   * @return MailingGroup
   */
  public function setSearchId($searchId) {
    $this->searchId = $searchId;
    return $this;
  }

  /**
   * Get searchId
   *
   * @return integer
   */
  public function getSearchId() {
    return $this->searchId;
  }
  
  /**
   * Set searchArgs
   *
   * @param text $searchArgs
   * @return MailingGroup
   */
  public function setSearchArgs($searchArgs) {
    $this->searchArgs = $searchArgs;
    return $this;
  }

  /**
   * Get searchArgs
   *
   * @return text
   */
  public function getSearchArgs() {
    return $this->searchArgs;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'mailing_id' => array(
      
        'name' => 'mailing_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                'FKClassName' => 'CRM_Mailing_Mailing',
                          ),
      
              'group_type' => array(
      
        'name' => 'group_type',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Group Type'),
                                 'maxlength' => 8,
                         'size' => CRM_Utils_Type::EIGHT,
                           
                                    
                                     'pseudoconstant' => array(
                                '0' => 'not in database',
                    )
                 ),
      
              'entity_table' => array(
      
        'name' => 'entity_table',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Entity Table'),
                        'required' => true,
                         'maxlength' => 64,
                         'size' => CRM_Utils_Type::BIG,
                           
                                    
                          ),
      
              'entity_id' => array(
      
        'name' => 'entity_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'search_id' => array(
      
        'name' => 'search_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                          ),
      
              'search_args' => array(
      
        'name' => 'search_args',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Search Args'),
                                                     
                                    
                          ),
             );
    }
    return self::$_fields;
  }

}

