<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Pledge/PledgePayment.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * PledgePayment
 *
 * @ORM\Table(name="civicrm_pledge_payment", indexes={@ORM\Index(name="index_contribution_pledge", columns={"contribution_id,pledge_id"}),@ORM\Index(name="index_status", columns={"status_id"}),@ORM\Index(name="FK_civicrm_pledge_payment_pledge_id", columns={"pledge_id"}),@ORM\Index(name="FK_civicrm_pledge_payment_contribution_id", columns={"contribution_id"})})
 * @ORM\Entity
 */
class PledgePayment extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Pledge\Pledge
   *
   * @ORM\ManyToOne(targetEntity="Civi\Pledge\Pledge")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="pledge_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $pledge;
  
  /**
   * @var \Civi\Contribute\Contribution
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contribute\Contribution")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contribution_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $contribution;
  
  /**
   * @var float
   *
   * @ORM\Column(name="scheduled_amount", type="float", nullable=true)
   * 
   */
  private $scheduledAmount;
  
  /**
   * @var float
   *
   * @ORM\Column(name="actual_amount", type="float", nullable=true)
   * 
   */
  private $actualAmount;
  
  /**
   * @var string
   *
   * @ORM\Column(name="currency", type="string", length=3, nullable=false)
   * 
   */
  private $currency = 'NULL';
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="scheduled_date", type="datetime", nullable=true)
   * 
   */
  private $scheduledDate;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="reminder_date", type="datetime", nullable=true)
   * 
   */
  private $reminderDate;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="reminder_count", type="integer", nullable=false)
   * 
   */
  private $reminderCount = '0';
  
  /**
   * @var integer
   *
   * @ORM\Column(name="status_id", type="integer", nullable=true)
   * 
   */
  private $statusId;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set pledge
   *
   * @param \Civi\Pledge\Pledge $pledge
   * @return PledgePayment
   */
  public function setPledge(\Civi\Pledge\Pledge $pledge = null) {
    $this->pledge = $pledge;
    return $this;
  }

  /**
   * Get pledge
   *
   * @return \Civi\Pledge\Pledge
   */
  public function getPledge() {
    return $this->pledge;
  }
  
  /**
   * Set contribution
   *
   * @param \Civi\Contribute\Contribution $contribution
   * @return PledgePayment
   */
  public function setContribution(\Civi\Contribute\Contribution $contribution = null) {
    $this->contribution = $contribution;
    return $this;
  }

  /**
   * Get contribution
   *
   * @return \Civi\Contribute\Contribution
   */
  public function getContribution() {
    return $this->contribution;
  }
  
  /**
   * Set scheduledAmount
   *
   * @param float $scheduledAmount
   * @return PledgePayment
   */
  public function setScheduledAmount($scheduledAmount) {
    $this->scheduledAmount = $scheduledAmount;
    return $this;
  }

  /**
   * Get scheduledAmount
   *
   * @return float
   */
  public function getScheduledAmount() {
    return $this->scheduledAmount;
  }
  
  /**
   * Set actualAmount
   *
   * @param float $actualAmount
   * @return PledgePayment
   */
  public function setActualAmount($actualAmount) {
    $this->actualAmount = $actualAmount;
    return $this;
  }

  /**
   * Get actualAmount
   *
   * @return float
   */
  public function getActualAmount() {
    return $this->actualAmount;
  }
  
  /**
   * Set currency
   *
   * @param string $currency
   * @return PledgePayment
   */
  public function setCurrency($currency) {
    $this->currency = $currency;
    return $this;
  }

  /**
   * Get currency
   *
   * @return string
   */
  public function getCurrency() {
    return $this->currency;
  }
  
  /**
   * Set scheduledDate
   *
   * @param datetime $scheduledDate
   * @return PledgePayment
   */
  public function setScheduledDate($scheduledDate) {
    $this->scheduledDate = $scheduledDate;
    return $this;
  }

  /**
   * Get scheduledDate
   *
   * @return datetime
   */
  public function getScheduledDate() {
    return $this->scheduledDate;
  }
  
  /**
   * Set reminderDate
   *
   * @param datetime $reminderDate
   * @return PledgePayment
   */
  public function setReminderDate($reminderDate) {
    $this->reminderDate = $reminderDate;
    return $this;
  }

  /**
   * Get reminderDate
   *
   * @return datetime
   */
  public function getReminderDate() {
    return $this->reminderDate;
  }
  
  /**
   * Set reminderCount
   *
   * @param integer $reminderCount
   * @return PledgePayment
   */
  public function setReminderCount($reminderCount) {
    $this->reminderCount = $reminderCount;
    return $this;
  }

  /**
   * Get reminderCount
   *
   * @return integer
   */
  public function getReminderCount() {
    return $this->reminderCount;
  }
  
  /**
   * Set statusId
   *
   * @param integer $statusId
   * @return PledgePayment
   */
  public function setStatusId($statusId) {
    $this->statusId = $statusId;
    return $this;
  }

  /**
   * Get statusId
   *
   * @return integer
   */
  public function getStatusId() {
    return $this->statusId;
  }

}

