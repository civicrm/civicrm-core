<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Dedupe/Rule.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * Rule
 *
 * @ORM\Table(name="civicrm_dedupe_rule", indexes={@ORM\Index(name="FK_civicrm_dedupe_rule_dedupe_rule_group_id", columns={"dedupe_rule_group_id"})})
 * @ORM\Entity
 */
class Rule extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Dedupe\RuleGroup
   *
   * @ORM\ManyToOne(targetEntity="Civi\Dedupe\RuleGroup")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="dedupe_rule_group_id", referencedColumnName="id")})
   */
  private $dedupeRuleGroup;
  
  /**
   * @var string
   *
   * @ORM\Column(name="rule_table", type="string", length=64, nullable=true)
   * 
   */
  private $ruleTable;
  
  /**
   * @var string
   *
   * @ORM\Column(name="rule_field", type="string", length=64, nullable=true)
   * 
   */
  private $ruleField;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="rule_length", type="integer", nullable=true)
   * 
   */
  private $ruleLength;
  
  /**
   * @var int
   *
   * @ORM\Column(name="rule_weight", type="int", nullable=true)
   * 
   */
  private $ruleWeight;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set dedupeRuleGroup
   *
   * @param \Civi\Dedupe\RuleGroup $dedupeRuleGroup
   * @return Rule
   */
  public function setDedupeRuleGroup(\Civi\Dedupe\RuleGroup $dedupeRuleGroup = null) {
    $this->dedupeRuleGroup = $dedupeRuleGroup;
    return $this;
  }

  /**
   * Get dedupeRuleGroup
   *
   * @return \Civi\Dedupe\RuleGroup
   */
  public function getDedupeRuleGroup() {
    return $this->dedupeRuleGroup;
  }
  
  /**
   * Set ruleTable
   *
   * @param string $ruleTable
   * @return Rule
   */
  public function setRuleTable($ruleTable) {
    $this->ruleTable = $ruleTable;
    return $this;
  }

  /**
   * Get ruleTable
   *
   * @return string
   */
  public function getRuleTable() {
    return $this->ruleTable;
  }
  
  /**
   * Set ruleField
   *
   * @param string $ruleField
   * @return Rule
   */
  public function setRuleField($ruleField) {
    $this->ruleField = $ruleField;
    return $this;
  }

  /**
   * Get ruleField
   *
   * @return string
   */
  public function getRuleField() {
    return $this->ruleField;
  }
  
  /**
   * Set ruleLength
   *
   * @param integer $ruleLength
   * @return Rule
   */
  public function setRuleLength($ruleLength) {
    $this->ruleLength = $ruleLength;
    return $this;
  }

  /**
   * Get ruleLength
   *
   * @return integer
   */
  public function getRuleLength() {
    return $this->ruleLength;
  }
  
  /**
   * Set ruleWeight
   *
   * @param int $ruleWeight
   * @return Rule
   */
  public function setRuleWeight($ruleWeight) {
    $this->ruleWeight = $ruleWeight;
    return $this;
  }

  /**
   * Get ruleWeight
   *
   * @return int
   */
  public function getRuleWeight() {
    return $this->ruleWeight;
  }

}

