<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Contact/SavedSearch.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Contact;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * SavedSearch
 *
 * @ORM\Table(name="civicrm_saved_search", indexes={@ORM\Index(name="FK_civicrm_saved_search_mapping_id", columns={"mapping_id"})})
 * @ORM\Entity
 */
class SavedSearch extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var text
   *
   * @ORM\Column(name="form_values", type="text", nullable=true)
   * 
   */
  private $formValues;
  
  /**
   * @var \Civi\Core\Mapping
   *
   * @ORM\ManyToOne(targetEntity="Civi\Core\Mapping")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="mapping_id", referencedColumnName="id")})
   */
  private $mapping;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="search_custom_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $searchCustomId;
  
  /**
   * @var text
   *
   * @ORM\Column(name="where_clause", type="text", nullable=true)
   * 
   */
  private $whereClause;
  
  /**
   * @var text
   *
   * @ORM\Column(name="select_tables", type="text", nullable=true)
   * 
   */
  private $selectTables;
  
  /**
   * @var text
   *
   * @ORM\Column(name="where_tables", type="text", nullable=true)
   * 
   */
  private $whereTables;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set formValues
   *
   * @param text $formValues
   * @return SavedSearch
   */
  public function setFormValues($formValues) {
    $this->formValues = $formValues;
    return $this;
  }

  /**
   * Get formValues
   *
   * @return text
   */
  public function getFormValues() {
    return $this->formValues;
  }
  
  /**
   * Set mapping
   *
   * @param \Civi\Core\Mapping $mapping
   * @return SavedSearch
   */
  public function setMapping(\Civi\Core\Mapping $mapping = null) {
    $this->mapping = $mapping;
    return $this;
  }

  /**
   * Get mapping
   *
   * @return \Civi\Core\Mapping
   */
  public function getMapping() {
    return $this->mapping;
  }
  
  /**
   * Set searchCustomId
   *
   * @param integer $searchCustomId
   * @return SavedSearch
   */
  public function setSearchCustomId($searchCustomId) {
    $this->searchCustomId = $searchCustomId;
    return $this;
  }

  /**
   * Get searchCustomId
   *
   * @return integer
   */
  public function getSearchCustomId() {
    return $this->searchCustomId;
  }
  
  /**
   * Set whereClause
   *
   * @param text $whereClause
   * @return SavedSearch
   */
  public function setWhereClause($whereClause) {
    $this->whereClause = $whereClause;
    return $this;
  }

  /**
   * Get whereClause
   *
   * @return text
   */
  public function getWhereClause() {
    return $this->whereClause;
  }
  
  /**
   * Set selectTables
   *
   * @param text $selectTables
   * @return SavedSearch
   */
  public function setSelectTables($selectTables) {
    $this->selectTables = $selectTables;
    return $this;
  }

  /**
   * Get selectTables
   *
   * @return text
   */
  public function getSelectTables() {
    return $this->selectTables;
  }
  
  /**
   * Set whereTables
   *
   * @param text $whereTables
   * @return SavedSearch
   */
  public function setWhereTables($whereTables) {
    $this->whereTables = $whereTables;
    return $this;
  }

  /**
   * Get whereTables
   *
   * @return text
   */
  public function getWhereTables() {
    return $this->whereTables;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'form_values' => array(
      
        'name' => 'form_values',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Submitted Form Values'),
                                                     
                'import' => true,
        'where' => 'civicrm_saved_search.form_values',
        'headerPattern' => '',
        'dataPattern' => '',
                         'export' => true,
                                   
                          ),
      
              'mapping_id' => array(
      
        'name' => 'mapping_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                'FKClassName' => 'CRM_Core_Mapping',
                          ),
      
              'search_custom_id' => array(
      
        'name' => 'search_custom_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                          ),
      
              'where_clause' => array(
      
        'name' => 'where_clause',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Where Clause'),
                                                     
                                    
                          ),
      
              'select_tables' => array(
      
        'name' => 'select_tables',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Select Tables'),
                                                     
                                    
                          ),
      
              'where_tables' => array(
      
        'name' => 'where_tables',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Where Tables'),
                                                     
                                    
                          ),
             );
    }
    return self::$_fields;
  }

}

