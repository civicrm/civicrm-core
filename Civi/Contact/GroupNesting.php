<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Contact/GroupNesting.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * GroupNesting
 *
 * @ORM\Table(name="civicrm_group_nesting", indexes={@ORM\Index(name="FK_civicrm_group_nesting_child_group_id", columns={"child_group_id"}),@ORM\Index(name="FK_civicrm_group_nesting_parent_group_id", columns={"parent_group_id"})})
 * @ORM\Entity
 */
class GroupNesting extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Contact\Group
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Group")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="child_group_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $childGroup;
  
  /**
   * @var \Civi\Contact\Group
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Group")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="parent_group_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $parentGroup;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set childGroup
   *
   * @param \Civi\Contact\Group $childGroup
   * @return GroupNesting
   */
  public function setChildGroup(\Civi\Contact\Group $childGroup = null) {
    $this->childGroup = $childGroup;
    return $this;
  }

  /**
   * Get childGroup
   *
   * @return \Civi\Contact\Group
   */
  public function getChildGroup() {
    return $this->childGroup;
  }
  
  /**
   * Set parentGroup
   *
   * @param \Civi\Contact\Group $parentGroup
   * @return GroupNesting
   */
  public function setParentGroup(\Civi\Contact\Group $parentGroup = null) {
    $this->parentGroup = $parentGroup;
    return $this;
  }

  /**
   * Get parentGroup
   *
   * @return \Civi\Contact\Group
   */
  public function getParentGroup() {
    return $this->parentGroup;
  }

}

