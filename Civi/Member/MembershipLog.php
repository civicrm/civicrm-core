<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Member/MembershipLog.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Member;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * MembershipLog
 *
 * @ORM\Table(name="civicrm_membership_log", indexes={@ORM\Index(name="FK_civicrm_membership_log_membership_id", columns={"membership_id"}),@ORM\Index(name="FK_civicrm_membership_log_status_id", columns={"status_id"}),@ORM\Index(name="FK_civicrm_membership_log_modified_id", columns={"modified_id"}),@ORM\Index(name="FK_civicrm_membership_log_membership_type_id", columns={"membership_type_id"})})
 * @ORM\Entity
 */
class MembershipLog extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Member\Membership
   *
   * @ORM\ManyToOne(targetEntity="Civi\Member\Membership")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="membership_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $membership;
  
  /**
   * @var \Civi\Member\MembershipStatus
   *
   * @ORM\ManyToOne(targetEntity="Civi\Member\MembershipStatus")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="status_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $status;
  
  /**
   * @var date
   *
   * @ORM\Column(name="start_date", type="date", nullable=true)
   * 
   */
  private $startDate;
  
  /**
   * @var date
   *
   * @ORM\Column(name="end_date", type="date", nullable=true)
   * 
   */
  private $endDate;
  
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="modified_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $modified;
  
  /**
   * @var date
   *
   * @ORM\Column(name="modified_date", type="date", nullable=true)
   * 
   */
  private $modifiedDate;
  
  /**
   * @var \Civi\Member\MembershipType
   *
   * @ORM\ManyToOne(targetEntity="Civi\Member\MembershipType")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="membership_type_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $membershipType;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="max_related", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $maxRelated;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set membership
   *
   * @param \Civi\Member\Membership $membership
   * @return MembershipLog
   */
  public function setMembership(\Civi\Member\Membership $membership = null) {
    $this->membership = $membership;
    return $this;
  }

  /**
   * Get membership
   *
   * @return \Civi\Member\Membership
   */
  public function getMembership() {
    return $this->membership;
  }
  
  /**
   * Set status
   *
   * @param \Civi\Member\MembershipStatus $status
   * @return MembershipLog
   */
  public function setStatus(\Civi\Member\MembershipStatus $status = null) {
    $this->status = $status;
    return $this;
  }

  /**
   * Get status
   *
   * @return \Civi\Member\MembershipStatus
   */
  public function getStatus() {
    return $this->status;
  }
  
  /**
   * Set startDate
   *
   * @param date $startDate
   * @return MembershipLog
   */
  public function setStartDate($startDate) {
    $this->startDate = $startDate;
    return $this;
  }

  /**
   * Get startDate
   *
   * @return date
   */
  public function getStartDate() {
    return $this->startDate;
  }
  
  /**
   * Set endDate
   *
   * @param date $endDate
   * @return MembershipLog
   */
  public function setEndDate($endDate) {
    $this->endDate = $endDate;
    return $this;
  }

  /**
   * Get endDate
   *
   * @return date
   */
  public function getEndDate() {
    return $this->endDate;
  }
  
  /**
   * Set modified
   *
   * @param \Civi\Contact\Contact $modified
   * @return MembershipLog
   */
  public function setModified(\Civi\Contact\Contact $modified = null) {
    $this->modified = $modified;
    return $this;
  }

  /**
   * Get modified
   *
   * @return \Civi\Contact\Contact
   */
  public function getModified() {
    return $this->modified;
  }
  
  /**
   * Set modifiedDate
   *
   * @param date $modifiedDate
   * @return MembershipLog
   */
  public function setModifiedDate($modifiedDate) {
    $this->modifiedDate = $modifiedDate;
    return $this;
  }

  /**
   * Get modifiedDate
   *
   * @return date
   */
  public function getModifiedDate() {
    return $this->modifiedDate;
  }
  
  /**
   * Set membershipType
   *
   * @param \Civi\Member\MembershipType $membershipType
   * @return MembershipLog
   */
  public function setMembershipType(\Civi\Member\MembershipType $membershipType = null) {
    $this->membershipType = $membershipType;
    return $this;
  }

  /**
   * Get membershipType
   *
   * @return \Civi\Member\MembershipType
   */
  public function getMembershipType() {
    return $this->membershipType;
  }
  
  /**
   * Set maxRelated
   *
   * @param integer $maxRelated
   * @return MembershipLog
   */
  public function setMaxRelated($maxRelated) {
    $this->maxRelated = $maxRelated;
    return $this;
  }

  /**
   * Get maxRelated
   *
   * @return integer
   */
  public function getMaxRelated() {
    return $this->maxRelated;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'membership_id' => array(
      
        'name' => 'membership_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                'FKClassName' => 'CRM_Member_Membership',
                          ),
      
              'status_id' => array(
      
        'name' => 'status_id',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Membership Status'),
                        'required' => true,
                                             
                                    
                'FKClassName' => 'CRM_Member_MembershipStatus',
                          ),
      
              'start_date' => array(
      
        'name' => 'start_date',
        'type' => CRM_Utils_Type::T_DATE,
                'title' => ts('Start Date'),
                                                     
                                    
                          ),
      
              'end_date' => array(
      
        'name' => 'end_date',
        'type' => CRM_Utils_Type::T_DATE,
                'title' => ts('End Date'),
                                                     
                                    
                          ),
      
              'modified_id' => array(
      
        'name' => 'modified_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                'FKClassName' => 'CRM_Contact_Contact',
                          ),
      
              'modified_date' => array(
      
        'name' => 'modified_date',
        'type' => CRM_Utils_Type::T_DATE,
                'title' => ts('Membership Change Date'),
                                                     
                                    
                          ),
      
              'membership_type_id' => array(
      
        'name' => 'membership_type_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                'FKClassName' => 'CRM_Member_MembershipType',
                          ),
      
              'max_related' => array(
      
        'name' => 'max_related',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Max Related'),
                                                     
                                    
                          ),
             );
    }
    return self::$_fields;
  }

}

