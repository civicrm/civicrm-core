<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Member/MembershipBlock.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Member;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * MembershipBlock
 *
 * @ORM\Table(name="civicrm_membership_block", indexes={@ORM\Index(name="FK_civicrm_membership_block_entity_id", columns={"entity_id"}),@ORM\Index(name="FK_civicrm_membership_block_membership_type_default", columns={"membership_type_default"})})
 * @ORM\Entity
 */
class MembershipBlock extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="entity_table", type="string", length=64, nullable=true)
   * 
   */
  private $entityTable;
  
  /**
   * @var \Civi\Contribute\ContributionPage
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contribute\ContributionPage")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="entity_id", referencedColumnName="id")})
   */
  private $entity;
  
  /**
   * @var string
   *
   * @ORM\Column(name="membership_types", type="string", length=255, nullable=true)
   * 
   */
  private $membershipTypes;
  
  /**
   * @var \Civi\Member\MembershipType
   *
   * @ORM\ManyToOne(targetEntity="Civi\Member\MembershipType")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="membership_type_default", referencedColumnName="id")})
   */
  private $membershipTypeDefault;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="display_min_fee", type="boolean", nullable=false)
   * 
   */
  private $displayMinFee = '1';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_separate_payment", type="boolean", nullable=false)
   * 
   */
  private $isSeparatePayment = '1';
  
  /**
   * @var string
   *
   * @ORM\Column(name="new_title", type="string", length=255, nullable=true)
   * 
   */
  private $newTitle;
  
  /**
   * @var text
   *
   * @ORM\Column(name="new_text", type="text", nullable=true)
   * 
   */
  private $newText;
  
  /**
   * @var string
   *
   * @ORM\Column(name="renewal_title", type="string", length=255, nullable=true)
   * 
   */
  private $renewalTitle;
  
  /**
   * @var text
   *
   * @ORM\Column(name="renewal_text", type="text", nullable=true)
   * 
   */
  private $renewalText;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_required", type="boolean", nullable=false)
   * 
   */
  private $isRequired = '0';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_active", type="boolean", nullable=false)
   * 
   */
  private $isActive = '1';

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set entityTable
   *
   * @param string $entityTable
   * @return MembershipBlock
   */
  public function setEntityTable($entityTable) {
    $this->entityTable = $entityTable;
    return $this;
  }

  /**
   * Get entityTable
   *
   * @return string
   */
  public function getEntityTable() {
    return $this->entityTable;
  }
  
  /**
   * Set entity
   *
   * @param \Civi\Contribute\ContributionPage $entity
   * @return MembershipBlock
   */
  public function setEntity(\Civi\Contribute\ContributionPage $entity = null) {
    $this->entity = $entity;
    return $this;
  }

  /**
   * Get entity
   *
   * @return \Civi\Contribute\ContributionPage
   */
  public function getEntity() {
    return $this->entity;
  }
  
  /**
   * Set membershipTypes
   *
   * @param string $membershipTypes
   * @return MembershipBlock
   */
  public function setMembershipTypes($membershipTypes) {
    $this->membershipTypes = $membershipTypes;
    return $this;
  }

  /**
   * Get membershipTypes
   *
   * @return string
   */
  public function getMembershipTypes() {
    return $this->membershipTypes;
  }
  
  /**
   * Set membershipTypeDefault
   *
   * @param \Civi\Member\MembershipType $membershipTypeDefault
   * @return MembershipBlock
   */
  public function setMembershipTypeDefault(\Civi\Member\MembershipType $membershipTypeDefault = null) {
    $this->membershipTypeDefault = $membershipTypeDefault;
    return $this;
  }

  /**
   * Get membershipTypeDefault
   *
   * @return \Civi\Member\MembershipType
   */
  public function getMembershipTypeDefault() {
    return $this->membershipTypeDefault;
  }
  
  /**
   * Set displayMinFee
   *
   * @param boolean $displayMinFee
   * @return MembershipBlock
   */
  public function setDisplayMinFee($displayMinFee) {
    $this->displayMinFee = $displayMinFee;
    return $this;
  }

  /**
   * Get displayMinFee
   *
   * @return boolean
   */
  public function getDisplayMinFee() {
    return $this->displayMinFee;
  }
  
  /**
   * Set isSeparatePayment
   *
   * @param boolean $isSeparatePayment
   * @return MembershipBlock
   */
  public function setIsSeparatePayment($isSeparatePayment) {
    $this->isSeparatePayment = $isSeparatePayment;
    return $this;
  }

  /**
   * Get isSeparatePayment
   *
   * @return boolean
   */
  public function getIsSeparatePayment() {
    return $this->isSeparatePayment;
  }
  
  /**
   * Set newTitle
   *
   * @param string $newTitle
   * @return MembershipBlock
   */
  public function setNewTitle($newTitle) {
    $this->newTitle = $newTitle;
    return $this;
  }

  /**
   * Get newTitle
   *
   * @return string
   */
  public function getNewTitle() {
    return $this->newTitle;
  }
  
  /**
   * Set newText
   *
   * @param text $newText
   * @return MembershipBlock
   */
  public function setNewText($newText) {
    $this->newText = $newText;
    return $this;
  }

  /**
   * Get newText
   *
   * @return text
   */
  public function getNewText() {
    return $this->newText;
  }
  
  /**
   * Set renewalTitle
   *
   * @param string $renewalTitle
   * @return MembershipBlock
   */
  public function setRenewalTitle($renewalTitle) {
    $this->renewalTitle = $renewalTitle;
    return $this;
  }

  /**
   * Get renewalTitle
   *
   * @return string
   */
  public function getRenewalTitle() {
    return $this->renewalTitle;
  }
  
  /**
   * Set renewalText
   *
   * @param text $renewalText
   * @return MembershipBlock
   */
  public function setRenewalText($renewalText) {
    $this->renewalText = $renewalText;
    return $this;
  }

  /**
   * Get renewalText
   *
   * @return text
   */
  public function getRenewalText() {
    return $this->renewalText;
  }
  
  /**
   * Set isRequired
   *
   * @param boolean $isRequired
   * @return MembershipBlock
   */
  public function setIsRequired($isRequired) {
    $this->isRequired = $isRequired;
    return $this;
  }

  /**
   * Get isRequired
   *
   * @return boolean
   */
  public function getIsRequired() {
    return $this->isRequired;
  }
  
  /**
   * Set isActive
   *
   * @param boolean $isActive
   * @return MembershipBlock
   */
  public function setIsActive($isActive) {
    $this->isActive = $isActive;
    return $this;
  }

  /**
   * Get isActive
   *
   * @return boolean
   */
  public function getIsActive() {
    return $this->isActive;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'entity_table' => array(
      
        'name' => 'entity_table',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Entity Table'),
                                 'maxlength' => 64,
                         'size' => CRM_Utils_Type::BIG,
                           
                                    
                          ),
      
              'entity_id' => array(
      
        'name' => 'entity_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                'FKClassName' => 'CRM_Contribute_ContributionPage',
                          ),
      
              'membership_types' => array(
      
        'name' => 'membership_types',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Membership Types'),
                                 'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                    
                          ),
      
              'membership_type_default' => array(
      
        'name' => 'membership_type_default',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Membership Type Default'),
                                                     
                                    
                'FKClassName' => 'CRM_Member_MembershipType',
                          ),
      
              'display_min_fee' => array(
      
        'name' => 'display_min_fee',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                'title' => ts('Display Min Fee'),
                                                     
                                           'default' => '1',
         
                          ),
      
              'is_separate_payment' => array(
      
        'name' => 'is_separate_payment',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                           'default' => '1',
         
                          ),
      
              'new_title' => array(
      
        'name' => 'new_title',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('New Title'),
                                 'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                    
                          ),
      
              'new_text' => array(
      
        'name' => 'new_text',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('New Text'),
                                                     
                                    
                          ),
      
              'renewal_title' => array(
      
        'name' => 'renewal_title',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Renewal Title'),
                                 'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                    
                          ),
      
              'renewal_text' => array(
      
        'name' => 'renewal_text',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Renewal Text'),
                                                     
                                    
                          ),
      
              'is_required' => array(
      
        'name' => 'is_required',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                'title' => ts('Is Required'),
                                                     
                                    
                          ),
      
              'is_active' => array(
      
        'name' => 'is_active',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                'title' => ts('Is Active'),
                                                     
                                           'default' => '1',
         
                          ),
             );
    }
    return self::$_fields;
  }

}

