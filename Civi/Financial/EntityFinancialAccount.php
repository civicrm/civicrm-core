<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Financial/EntityFinancialAccount.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Financial;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * EntityFinancialAccount
 *
 * @ORM\Table(name="civicrm_entity_financial_account", indexes={@ORM\Index(name="FK_civicrm_entity_financial_account_financial_account_id", columns={"financial_account_id"})})
 * @ORM\Entity
 */
class EntityFinancialAccount extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="entity_table", type="string", length=64, nullable=true)
   * 
   */
  private $entityTable;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="entity_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $entityId;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="account_relationship", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $accountRelationship;
  
  /**
   * @var \Civi\Financial\FinancialAccount
   *
   * @ORM\ManyToOne(targetEntity="Civi\Financial\FinancialAccount")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="financial_account_id", referencedColumnName="id", onDelete="RESTRICT")})
   */
  private $financialAccount;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set entityTable
   *
   * @param string $entityTable
   * @return EntityFinancialAccount
   */
  public function setEntityTable($entityTable) {
    $this->entityTable = $entityTable;
    return $this;
  }

  /**
   * Get entityTable
   *
   * @return string
   */
  public function getEntityTable() {
    return $this->entityTable;
  }
  
  /**
   * Set entityId
   *
   * @param integer $entityId
   * @return EntityFinancialAccount
   */
  public function setEntityId($entityId) {
    $this->entityId = $entityId;
    return $this;
  }

  /**
   * Get entityId
   *
   * @return integer
   */
  public function getEntityId() {
    return $this->entityId;
  }
  
  /**
   * Set accountRelationship
   *
   * @param integer $accountRelationship
   * @return EntityFinancialAccount
   */
  public function setAccountRelationship($accountRelationship) {
    $this->accountRelationship = $accountRelationship;
    return $this;
  }

  /**
   * Get accountRelationship
   *
   * @return integer
   */
  public function getAccountRelationship() {
    return $this->accountRelationship;
  }
  
  /**
   * Set financialAccount
   *
   * @param \Civi\Financial\FinancialAccount $financialAccount
   * @return EntityFinancialAccount
   */
  public function setFinancialAccount(\Civi\Financial\FinancialAccount $financialAccount = null) {
    $this->financialAccount = $financialAccount;
    return $this;
  }

  /**
   * Get financialAccount
   *
   * @return \Civi\Financial\FinancialAccount
   */
  public function getFinancialAccount() {
    return $this->financialAccount;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'entity_table' => array(
      
        'name' => 'entity_table',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Entity Table'),
                        'required' => true,
                         'maxlength' => 64,
                         'size' => CRM_Utils_Type::BIG,
                           
                'import' => true,
        'where' => 'civicrm_entity_financial_account.entity_table',
        'headerPattern' => '',
        'dataPattern' => '',
                         'export' => true,
                                   
                          ),
      
              'entity_id' => array(
      
        'name' => 'entity_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'account_relationship' => array(
      
        'name' => 'account_relationship',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Account Relationship'),
                        'required' => true,
                                             
                                    
                                     'pseudoconstant' => array(
                                'optionGroupName' => 'account_relationship',
                    )
                 ),
      
              'financial_account_id' => array(
      
        'name' => 'financial_account_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                'FKClassName' => 'CRM_Financial_FinancialAccount',
                                     'pseudoconstant' => array(
                                'table' => 'civicrm_financial_account',
                      'keyColumn' => 'id',
                      'labelColumn' => 'name',
                    )
                 ),
             );
    }
    return self::$_fields;
  }

}

