<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Financial/FinancialItem.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * FinancialItem
 *
 * @ORM\Table(name="civicrm_financial_item", uniqueConstraints={@ORM\UniqueConstraint(name="UI_id", columns={"id"})}, indexes={@ORM\Index(name="IX_created_date", columns={"created_date"}),@ORM\Index(name="IX_transaction_date", columns={"transaction_date"}),@ORM\Index(name="IX_entity", columns={"entity_table,entity_id"}),@ORM\Index(name="FK_civicrm_financial_item_contact_id", columns={"contact_id"}),@ORM\Index(name="FK_civicrm_financial_item_financial_account_id", columns={"financial_account_id"})})
 * @ORM\Entity
 */
class FinancialItem extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var timestamp
   *
   * @ORM\Column(name="created_date", type="timestamp", nullable=false)
   * 
   */
  private $createdDate = 'CURRENT_TIMESTAMP';
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="transaction_date", type="datetime", nullable=true)
   * 
   */
  private $transactionDate;
  
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contact_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $contact;
  
  /**
   * @var string
   *
   * @ORM\Column(name="description", type="string", length=255, nullable=true)
   * 
   */
  private $description;
  
  /**
   * @var float
   *
   * @ORM\Column(name="amount", type="float", nullable=false)
   * 
   */
  private $amount = '0';
  
  /**
   * @var string
   *
   * @ORM\Column(name="currency", type="string", length=3, nullable=true)
   * 
   */
  private $currency;
  
  /**
   * @var \Civi\Financial\FinancialAccount
   *
   * @ORM\ManyToOne(targetEntity="Civi\Financial\FinancialAccount")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="financial_account_id", referencedColumnName="id")})
   */
  private $financialAccount;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="status_id", type="integer", nullable=true)
   * 
   */
  private $statusId;
  
  /**
   * @var string
   *
   * @ORM\Column(name="entity_table", type="string", length=64, nullable=true)
   * 
   */
  private $entityTable;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="entity_id", type="integer", nullable=true)
   * 
   */
  private $entityId;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set createdDate
   *
   * @param timestamp $createdDate
   * @return FinancialItem
   */
  public function setCreatedDate($createdDate) {
    $this->createdDate = $createdDate;
    return $this;
  }

  /**
   * Get createdDate
   *
   * @return timestamp
   */
  public function getCreatedDate() {
    return $this->createdDate;
  }
  
  /**
   * Set transactionDate
   *
   * @param datetime $transactionDate
   * @return FinancialItem
   */
  public function setTransactionDate($transactionDate) {
    $this->transactionDate = $transactionDate;
    return $this;
  }

  /**
   * Get transactionDate
   *
   * @return datetime
   */
  public function getTransactionDate() {
    return $this->transactionDate;
  }
  
  /**
   * Set contact
   *
   * @param \Civi\Contact\Contact $contact
   * @return FinancialItem
   */
  public function setContact(\Civi\Contact\Contact $contact = null) {
    $this->contact = $contact;
    return $this;
  }

  /**
   * Get contact
   *
   * @return \Civi\Contact\Contact
   */
  public function getContact() {
    return $this->contact;
  }
  
  /**
   * Set description
   *
   * @param string $description
   * @return FinancialItem
   */
  public function setDescription($description) {
    $this->description = $description;
    return $this;
  }

  /**
   * Get description
   *
   * @return string
   */
  public function getDescription() {
    return $this->description;
  }
  
  /**
   * Set amount
   *
   * @param float $amount
   * @return FinancialItem
   */
  public function setAmount($amount) {
    $this->amount = $amount;
    return $this;
  }

  /**
   * Get amount
   *
   * @return float
   */
  public function getAmount() {
    return $this->amount;
  }
  
  /**
   * Set currency
   *
   * @param string $currency
   * @return FinancialItem
   */
  public function setCurrency($currency) {
    $this->currency = $currency;
    return $this;
  }

  /**
   * Get currency
   *
   * @return string
   */
  public function getCurrency() {
    return $this->currency;
  }
  
  /**
   * Set financialAccount
   *
   * @param \Civi\Financial\FinancialAccount $financialAccount
   * @return FinancialItem
   */
  public function setFinancialAccount(\Civi\Financial\FinancialAccount $financialAccount = null) {
    $this->financialAccount = $financialAccount;
    return $this;
  }

  /**
   * Get financialAccount
   *
   * @return \Civi\Financial\FinancialAccount
   */
  public function getFinancialAccount() {
    return $this->financialAccount;
  }
  
  /**
   * Set statusId
   *
   * @param integer $statusId
   * @return FinancialItem
   */
  public function setStatusId($statusId) {
    $this->statusId = $statusId;
    return $this;
  }

  /**
   * Get statusId
   *
   * @return integer
   */
  public function getStatusId() {
    return $this->statusId;
  }
  
  /**
   * Set entityTable
   *
   * @param string $entityTable
   * @return FinancialItem
   */
  public function setEntityTable($entityTable) {
    $this->entityTable = $entityTable;
    return $this;
  }

  /**
   * Get entityTable
   *
   * @return string
   */
  public function getEntityTable() {
    return $this->entityTable;
  }
  
  /**
   * Set entityId
   *
   * @param integer $entityId
   * @return FinancialItem
   */
  public function setEntityId($entityId) {
    $this->entityId = $entityId;
    return $this;
  }

  /**
   * Get entityId
   *
   * @return integer
   */
  public function getEntityId() {
    return $this->entityId;
  }

}

