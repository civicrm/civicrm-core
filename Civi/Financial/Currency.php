<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Financial/Currency.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Financial;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * Currency
 *
 * @ORM\Table(name="civicrm_currency")
 * @ORM\Entity
 */
class Currency extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=64, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var string
   *
   * @ORM\Column(name="symbol", type="string", length=8, nullable=true)
   * 
   */
  private $symbol;
  
  /**
   * @var string
   *
   * @ORM\Column(name="numeric_code", type="string", length=3, nullable=true)
   * 
   */
  private $numericCode;
  
  /**
   * @var string
   *
   * @ORM\Column(name="full_name", type="string", length=64, nullable=true)
   * 
   */
  private $fullName;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set name
   *
   * @param string $name
   * @return Currency
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set symbol
   *
   * @param string $symbol
   * @return Currency
   */
  public function setSymbol($symbol) {
    $this->symbol = $symbol;
    return $this;
  }

  /**
   * Get symbol
   *
   * @return string
   */
  public function getSymbol() {
    return $this->symbol;
  }
  
  /**
   * Set numericCode
   *
   * @param string $numericCode
   * @return Currency
   */
  public function setNumericCode($numericCode) {
    $this->numericCode = $numericCode;
    return $this;
  }

  /**
   * Get numericCode
   *
   * @return string
   */
  public function getNumericCode() {
    return $this->numericCode;
  }
  
  /**
   * Set fullName
   *
   * @param string $fullName
   * @return Currency
   */
  public function setFullName($fullName) {
    $this->fullName = $fullName;
    return $this;
  }

  /**
   * Get fullName
   *
   * @return string
   */
  public function getFullName() {
    return $this->fullName;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'name' => array(
      
        'name' => 'name',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Currency'),
                                 'maxlength' => 64,
                         'size' => CRM_Utils_Type::BIG,
                           
                'import' => true,
        'where' => 'civicrm_currency.name',
        'headerPattern' => '',
        'dataPattern' => '',
                         'export' => true,
                                   
                          ),
      
              'symbol' => array(
      
        'name' => 'symbol',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Symbol'),
                                 'maxlength' => 8,
                         'size' => CRM_Utils_Type::EIGHT,
                           
                                    
                          ),
      
              'numeric_code' => array(
      
        'name' => 'numeric_code',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Numeric Code'),
                                 'maxlength' => 3,
                         'size' => CRM_Utils_Type::FOUR,
                           
                'import' => true,
        'where' => 'civicrm_currency.numeric_code',
        'headerPattern' => '',
        'dataPattern' => '',
                         'export' => true,
                                   
                          ),
      
              'full_name' => array(
      
        'name' => 'full_name',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Full Name'),
                                 'maxlength' => 64,
                         'size' => CRM_Utils_Type::BIG,
                           
                                    
                          ),
             );
    }
    return self::$_fields;
  }

}

