<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Financial/FinancialAccount.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * FinancialAccount
 *
 * @ORM\Table(name="civicrm_financial_account", uniqueConstraints={@ORM\UniqueConstraint(name="UI_name", columns={"name"})}, indexes={@ORM\Index(name="FK_civicrm_financial_account_contact_id", columns={"contact_id"}),@ORM\Index(name="FK_civicrm_financial_account_parent_id", columns={"parent_id"})})
 * @ORM\Entity
 */
class FinancialAccount extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=255, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contact_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $contact;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="financial_account_type_id", type="integer", nullable=false)
   * 
   */
  private $financialAccountTypeId = '3';
  
  /**
   * @var string
   *
   * @ORM\Column(name="accounting_code", type="string", length=64, nullable=true)
   * 
   */
  private $accountingCode;
  
  /**
   * @var string
   *
   * @ORM\Column(name="account_type_code", type="string", length=64, nullable=true)
   * 
   */
  private $accountTypeCode;
  
  /**
   * @var string
   *
   * @ORM\Column(name="description", type="string", length=255, nullable=true)
   * 
   */
  private $description;
  
  /**
   * @var \Civi\Financial\FinancialAccount
   *
   * @ORM\ManyToOne(targetEntity="Civi\Financial\FinancialAccount")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="parent_id", referencedColumnName="id")})
   */
  private $parent;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_header_account", type="boolean", nullable=false)
   * 
   */
  private $isHeaderAccount = '0';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_deductible", type="boolean", nullable=false)
   * 
   */
  private $isDeductible = '1';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_tax", type="boolean", nullable=false)
   * 
   */
  private $isTax = '0';
  
  /**
   * @var float
   *
   * @ORM\Column(name="tax_rate", type="float", nullable=true)
   * 
   */
  private $taxRate;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_reserved", type="boolean", nullable=true)
   * 
   */
  private $isReserved;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_active", type="boolean", nullable=true)
   * 
   */
  private $isActive;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_default", type="boolean", nullable=true)
   * 
   */
  private $isDefault;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set name
   *
   * @param string $name
   * @return FinancialAccount
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set contact
   *
   * @param \Civi\Contact\Contact $contact
   * @return FinancialAccount
   */
  public function setContact(\Civi\Contact\Contact $contact = null) {
    $this->contact = $contact;
    return $this;
  }

  /**
   * Get contact
   *
   * @return \Civi\Contact\Contact
   */
  public function getContact() {
    return $this->contact;
  }
  
  /**
   * Set financialAccountTypeId
   *
   * @param integer $financialAccountTypeId
   * @return FinancialAccount
   */
  public function setFinancialAccountTypeId($financialAccountTypeId) {
    $this->financialAccountTypeId = $financialAccountTypeId;
    return $this;
  }

  /**
   * Get financialAccountTypeId
   *
   * @return integer
   */
  public function getFinancialAccountTypeId() {
    return $this->financialAccountTypeId;
  }
  
  /**
   * Set accountingCode
   *
   * @param string $accountingCode
   * @return FinancialAccount
   */
  public function setAccountingCode($accountingCode) {
    $this->accountingCode = $accountingCode;
    return $this;
  }

  /**
   * Get accountingCode
   *
   * @return string
   */
  public function getAccountingCode() {
    return $this->accountingCode;
  }
  
  /**
   * Set accountTypeCode
   *
   * @param string $accountTypeCode
   * @return FinancialAccount
   */
  public function setAccountTypeCode($accountTypeCode) {
    $this->accountTypeCode = $accountTypeCode;
    return $this;
  }

  /**
   * Get accountTypeCode
   *
   * @return string
   */
  public function getAccountTypeCode() {
    return $this->accountTypeCode;
  }
  
  /**
   * Set description
   *
   * @param string $description
   * @return FinancialAccount
   */
  public function setDescription($description) {
    $this->description = $description;
    return $this;
  }

  /**
   * Get description
   *
   * @return string
   */
  public function getDescription() {
    return $this->description;
  }
  
  /**
   * Set parent
   *
   * @param \Civi\Financial\FinancialAccount $parent
   * @return FinancialAccount
   */
  public function setParent(\Civi\Financial\FinancialAccount $parent = null) {
    $this->parent = $parent;
    return $this;
  }

  /**
   * Get parent
   *
   * @return \Civi\Financial\FinancialAccount
   */
  public function getParent() {
    return $this->parent;
  }
  
  /**
   * Set isHeaderAccount
   *
   * @param boolean $isHeaderAccount
   * @return FinancialAccount
   */
  public function setIsHeaderAccount($isHeaderAccount) {
    $this->isHeaderAccount = $isHeaderAccount;
    return $this;
  }

  /**
   * Get isHeaderAccount
   *
   * @return boolean
   */
  public function getIsHeaderAccount() {
    return $this->isHeaderAccount;
  }
  
  /**
   * Set isDeductible
   *
   * @param boolean $isDeductible
   * @return FinancialAccount
   */
  public function setIsDeductible($isDeductible) {
    $this->isDeductible = $isDeductible;
    return $this;
  }

  /**
   * Get isDeductible
   *
   * @return boolean
   */
  public function getIsDeductible() {
    return $this->isDeductible;
  }
  
  /**
   * Set isTax
   *
   * @param boolean $isTax
   * @return FinancialAccount
   */
  public function setIsTax($isTax) {
    $this->isTax = $isTax;
    return $this;
  }

  /**
   * Get isTax
   *
   * @return boolean
   */
  public function getIsTax() {
    return $this->isTax;
  }
  
  /**
   * Set taxRate
   *
   * @param float $taxRate
   * @return FinancialAccount
   */
  public function setTaxRate($taxRate) {
    $this->taxRate = $taxRate;
    return $this;
  }

  /**
   * Get taxRate
   *
   * @return float
   */
  public function getTaxRate() {
    return $this->taxRate;
  }
  
  /**
   * Set isReserved
   *
   * @param boolean $isReserved
   * @return FinancialAccount
   */
  public function setIsReserved($isReserved) {
    $this->isReserved = $isReserved;
    return $this;
  }

  /**
   * Get isReserved
   *
   * @return boolean
   */
  public function getIsReserved() {
    return $this->isReserved;
  }
  
  /**
   * Set isActive
   *
   * @param boolean $isActive
   * @return FinancialAccount
   */
  public function setIsActive($isActive) {
    $this->isActive = $isActive;
    return $this;
  }

  /**
   * Get isActive
   *
   * @return boolean
   */
  public function getIsActive() {
    return $this->isActive;
  }
  
  /**
   * Set isDefault
   *
   * @param boolean $isDefault
   * @return FinancialAccount
   */
  public function setIsDefault($isDefault) {
    $this->isDefault = $isDefault;
    return $this;
  }

  /**
   * Get isDefault
   *
   * @return boolean
   */
  public function getIsDefault() {
    return $this->isDefault;
  }

}

