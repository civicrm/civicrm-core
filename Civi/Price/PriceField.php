<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Price/PriceField.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Price;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * PriceField
 *
 * @ORM\Table(name="civicrm_price_field", indexes={@ORM\Index(name="index_name", columns={"name"}),@ORM\Index(name="FK_civicrm_price_field_price_set_id", columns={"price_set_id"})})
 * @ORM\Entity
 */
class PriceField extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Price\PriceSet
   *
   * @ORM\ManyToOne(targetEntity="Civi\Price\PriceSet")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="price_set_id", referencedColumnName="id")})
   */
  private $priceSet;
  
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=255, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var string
   *
   * @ORM\Column(name="label", type="string", length=255, nullable=true)
   * 
   */
  private $label;
  
  /**
   * @var string
   *
   * @ORM\Column(name="html_type", type="string", length=12, nullable=true)
   * 
   */
  private $htmlType;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_enter_qty", type="boolean", nullable=false)
   * 
   */
  private $isEnterQty = '0';
  
  /**
   * @var text
   *
   * @ORM\Column(name="help_pre", type="text", nullable=true)
   * 
   */
  private $helpPre;
  
  /**
   * @var text
   *
   * @ORM\Column(name="help_post", type="text", nullable=true)
   * 
   */
  private $helpPost;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="weight", type="integer", nullable=false, options={"unsigned":true})
   * 
   */
  private $weight = '1';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_display_amounts", type="boolean", nullable=false)
   * 
   */
  private $isDisplayAmounts = '1';
  
  /**
   * @var integer
   *
   * @ORM\Column(name="options_per_line", type="integer", nullable=false, options={"unsigned":true})
   * 
   */
  private $optionsPerLine = '1';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_active", type="boolean", nullable=false)
   * 
   */
  private $isActive = '1';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_required", type="boolean", nullable=false)
   * 
   */
  private $isRequired = '1';
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="active_on", type="datetime", nullable=false)
   * 
   */
  private $activeOn = 'NULL';
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="expire_on", type="datetime", nullable=false)
   * 
   */
  private $expireOn = 'NULL';
  
  /**
   * @var string
   *
   * @ORM\Column(name="javascript", type="string", length=255, nullable=true)
   * 
   */
  private $javascript;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="visibility_id", type="integer", nullable=false, options={"unsigned":true})
   * 
   */
  private $visibilityId = '1';

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set priceSet
   *
   * @param \Civi\Price\PriceSet $priceSet
   * @return PriceField
   */
  public function setPriceSet(\Civi\Price\PriceSet $priceSet = null) {
    $this->priceSet = $priceSet;
    return $this;
  }

  /**
   * Get priceSet
   *
   * @return \Civi\Price\PriceSet
   */
  public function getPriceSet() {
    return $this->priceSet;
  }
  
  /**
   * Set name
   *
   * @param string $name
   * @return PriceField
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set label
   *
   * @param string $label
   * @return PriceField
   */
  public function setLabel($label) {
    $this->label = $label;
    return $this;
  }

  /**
   * Get label
   *
   * @return string
   */
  public function getLabel() {
    return $this->label;
  }
  
  /**
   * Set htmlType
   *
   * @param string $htmlType
   * @return PriceField
   */
  public function setHtmlType($htmlType) {
    $this->htmlType = $htmlType;
    return $this;
  }

  /**
   * Get htmlType
   *
   * @return string
   */
  public function getHtmlType() {
    return $this->htmlType;
  }
  
  /**
   * Set isEnterQty
   *
   * @param boolean $isEnterQty
   * @return PriceField
   */
  public function setIsEnterQty($isEnterQty) {
    $this->isEnterQty = $isEnterQty;
    return $this;
  }

  /**
   * Get isEnterQty
   *
   * @return boolean
   */
  public function getIsEnterQty() {
    return $this->isEnterQty;
  }
  
  /**
   * Set helpPre
   *
   * @param text $helpPre
   * @return PriceField
   */
  public function setHelpPre($helpPre) {
    $this->helpPre = $helpPre;
    return $this;
  }

  /**
   * Get helpPre
   *
   * @return text
   */
  public function getHelpPre() {
    return $this->helpPre;
  }
  
  /**
   * Set helpPost
   *
   * @param text $helpPost
   * @return PriceField
   */
  public function setHelpPost($helpPost) {
    $this->helpPost = $helpPost;
    return $this;
  }

  /**
   * Get helpPost
   *
   * @return text
   */
  public function getHelpPost() {
    return $this->helpPost;
  }
  
  /**
   * Set weight
   *
   * @param integer $weight
   * @return PriceField
   */
  public function setWeight($weight) {
    $this->weight = $weight;
    return $this;
  }

  /**
   * Get weight
   *
   * @return integer
   */
  public function getWeight() {
    return $this->weight;
  }
  
  /**
   * Set isDisplayAmounts
   *
   * @param boolean $isDisplayAmounts
   * @return PriceField
   */
  public function setIsDisplayAmounts($isDisplayAmounts) {
    $this->isDisplayAmounts = $isDisplayAmounts;
    return $this;
  }

  /**
   * Get isDisplayAmounts
   *
   * @return boolean
   */
  public function getIsDisplayAmounts() {
    return $this->isDisplayAmounts;
  }
  
  /**
   * Set optionsPerLine
   *
   * @param integer $optionsPerLine
   * @return PriceField
   */
  public function setOptionsPerLine($optionsPerLine) {
    $this->optionsPerLine = $optionsPerLine;
    return $this;
  }

  /**
   * Get optionsPerLine
   *
   * @return integer
   */
  public function getOptionsPerLine() {
    return $this->optionsPerLine;
  }
  
  /**
   * Set isActive
   *
   * @param boolean $isActive
   * @return PriceField
   */
  public function setIsActive($isActive) {
    $this->isActive = $isActive;
    return $this;
  }

  /**
   * Get isActive
   *
   * @return boolean
   */
  public function getIsActive() {
    return $this->isActive;
  }
  
  /**
   * Set isRequired
   *
   * @param boolean $isRequired
   * @return PriceField
   */
  public function setIsRequired($isRequired) {
    $this->isRequired = $isRequired;
    return $this;
  }

  /**
   * Get isRequired
   *
   * @return boolean
   */
  public function getIsRequired() {
    return $this->isRequired;
  }
  
  /**
   * Set activeOn
   *
   * @param datetime $activeOn
   * @return PriceField
   */
  public function setActiveOn($activeOn) {
    $this->activeOn = $activeOn;
    return $this;
  }

  /**
   * Get activeOn
   *
   * @return datetime
   */
  public function getActiveOn() {
    return $this->activeOn;
  }
  
  /**
   * Set expireOn
   *
   * @param datetime $expireOn
   * @return PriceField
   */
  public function setExpireOn($expireOn) {
    $this->expireOn = $expireOn;
    return $this;
  }

  /**
   * Get expireOn
   *
   * @return datetime
   */
  public function getExpireOn() {
    return $this->expireOn;
  }
  
  /**
   * Set javascript
   *
   * @param string $javascript
   * @return PriceField
   */
  public function setJavascript($javascript) {
    $this->javascript = $javascript;
    return $this;
  }

  /**
   * Get javascript
   *
   * @return string
   */
  public function getJavascript() {
    return $this->javascript;
  }
  
  /**
   * Set visibilityId
   *
   * @param integer $visibilityId
   * @return PriceField
   */
  public function setVisibilityId($visibilityId) {
    $this->visibilityId = $visibilityId;
    return $this;
  }

  /**
   * Get visibilityId
   *
   * @return integer
   */
  public function getVisibilityId() {
    return $this->visibilityId;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'price_set_id' => array(
      
        'name' => 'price_set_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                'FKClassName' => 'CRM_Price_PriceSet',
                          ),
      
              'name' => array(
      
        'name' => 'name',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Name'),
                        'required' => true,
                         'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                    
                          ),
      
              'label' => array(
      
        'name' => 'label',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Label'),
                        'required' => true,
                         'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                    
                          ),
      
              'html_type' => array(
      
        'name' => 'html_type',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Html Type'),
                        'required' => true,
                         'maxlength' => 12,
                         'size' => CRM_Utils_Type::TWELVE,
                           
                                    
                                     'pseudoconstant' => array(
                                '0' => 'not in database',
                    )
                 ),
      
              'is_enter_qty' => array(
      
        'name' => 'is_enter_qty',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                    
                          ),
      
              'help_pre' => array(
      
        'name' => 'help_pre',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Help Pre'),
                                                   'rows' => 4,
                         'cols' => 80,
         
                                    
                          ),
      
              'help_post' => array(
      
        'name' => 'help_post',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Help Post'),
                                                   'rows' => 4,
                         'cols' => 80,
         
                                    
                          ),
      
              'weight' => array(
      
        'name' => 'weight',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Weight'),
                                                     
                                           'default' => '1',
         
                          ),
      
              'is_display_amounts' => array(
      
        'name' => 'is_display_amounts',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                           'default' => '1',
         
                          ),
      
              'options_per_line' => array(
      
        'name' => 'options_per_line',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Options Per Line'),
                                                     
                                           'default' => '1',
         
                          ),
      
              'is_active' => array(
      
        'name' => 'is_active',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                           'default' => '1',
         
                          ),
      
              'is_required' => array(
      
        'name' => 'is_required',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                           'default' => '1',
         
                          ),
      
              'active_on' => array(
      
        'name' => 'active_on',
        'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
                'title' => ts('Active On'),
                                                     
                                           'default' => 'NULL',
         
                          ),
      
              'expire_on' => array(
      
        'name' => 'expire_on',
        'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
                'title' => ts('Expire On'),
                                                     
                                           'default' => 'NULL',
         
                          ),
      
              'javascript' => array(
      
        'name' => 'javascript',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Javascript'),
                                 'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                    
                          ),
      
              'visibility_id' => array(
      
        'name' => 'visibility_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                           'default' => '1',
         
                                     'pseudoconstant' => array(
                                'optionGroupName' => 'visibility',
                    )
                 ),
             );
    }
    return self::$_fields;
  }

}

