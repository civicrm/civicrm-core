<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/Domain.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * Domain
 *
 * @ORM\Table(name="civicrm_domain", uniqueConstraints={@ORM\UniqueConstraint(name="UI_name", columns={"name"})}, indexes={@ORM\Index(name="FK_civicrm_domain_contact_id", columns={"contact_id"})})
 * @ORM\Entity
 */
class Domain extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=64, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var string
   *
   * @ORM\Column(name="description", type="string", length=255, nullable=true)
   * 
   */
  private $description;
  
  /**
   * @var text
   *
   * @ORM\Column(name="config_backend", type="text", nullable=true)
   * 
   */
  private $configBackend;
  
  /**
   * @var string
   *
   * @ORM\Column(name="version", type="string", length=32, nullable=true)
   * 
   */
  private $version;
  
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contact_id", referencedColumnName="id")})
   */
  private $contact;
  
  /**
   * @var text
   *
   * @ORM\Column(name="locales", type="text", nullable=true)
   * 
   */
  private $locales;
  
  /**
   * @var text
   *
   * @ORM\Column(name="locale_custom_strings", type="text", nullable=true)
   * 
   */
  private $localeCustomStrings;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set name
   *
   * @param string $name
   * @return Domain
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set description
   *
   * @param string $description
   * @return Domain
   */
  public function setDescription($description) {
    $this->description = $description;
    return $this;
  }

  /**
   * Get description
   *
   * @return string
   */
  public function getDescription() {
    return $this->description;
  }
  
  /**
   * Set configBackend
   *
   * @param text $configBackend
   * @return Domain
   */
  public function setConfigBackend($configBackend) {
    $this->configBackend = $configBackend;
    return $this;
  }

  /**
   * Get configBackend
   *
   * @return text
   */
  public function getConfigBackend() {
    return $this->configBackend;
  }
  
  /**
   * Set version
   *
   * @param string $version
   * @return Domain
   */
  public function setVersion($version) {
    $this->version = $version;
    return $this;
  }

  /**
   * Get version
   *
   * @return string
   */
  public function getVersion() {
    return $this->version;
  }
  
  /**
   * Set contact
   *
   * @param \Civi\Contact\Contact $contact
   * @return Domain
   */
  public function setContact(\Civi\Contact\Contact $contact = null) {
    $this->contact = $contact;
    return $this;
  }

  /**
   * Get contact
   *
   * @return \Civi\Contact\Contact
   */
  public function getContact() {
    return $this->contact;
  }
  
  /**
   * Set locales
   *
   * @param text $locales
   * @return Domain
   */
  public function setLocales($locales) {
    $this->locales = $locales;
    return $this;
  }

  /**
   * Get locales
   *
   * @return text
   */
  public function getLocales() {
    return $this->locales;
  }
  
  /**
   * Set localeCustomStrings
   *
   * @param text $localeCustomStrings
   * @return Domain
   */
  public function setLocaleCustomStrings($localeCustomStrings) {
    $this->localeCustomStrings = $localeCustomStrings;
    return $this;
  }

  /**
   * Get localeCustomStrings
   *
   * @return text
   */
  public function getLocaleCustomStrings() {
    return $this->localeCustomStrings;
  }

}

