<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/Tag.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * Tag
 *
 * @ORM\Table(name="civicrm_tag", uniqueConstraints={@ORM\UniqueConstraint(name="UI_name", columns={"name"})}, indexes={@ORM\Index(name="FK_civicrm_tag_parent_id", columns={"parent_id"}),@ORM\Index(name="FK_civicrm_tag_created_id", columns={"created_id"})})
 * @ORM\Entity
 */
class Tag extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=64, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var string
   *
   * @ORM\Column(name="description", type="string", length=255, nullable=true)
   * 
   */
  private $description;
  
  /**
   * @var \Civi\Core\Tag
   *
   * @ORM\ManyToOne(targetEntity="Civi\Core\Tag")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="parent_id", referencedColumnName="id")})
   */
  private $parent = 'NULL';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_selectable", type="boolean", nullable=false)
   * 
   */
  private $isSelectable = '1';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_reserved", type="boolean", nullable=false)
   * 
   */
  private $isReserved = '0';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_tagset", type="boolean", nullable=false)
   * 
   */
  private $isTagset = '0';
  
  /**
   * @var string
   *
   * @ORM\Column(name="used_for", type="string", length=64, nullable=false)
   * 
   */
  private $usedFor = 'NULL';
  
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="created_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $created;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="created_date", type="datetime", nullable=true)
   * 
   */
  private $createdDate;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set name
   *
   * @param string $name
   * @return Tag
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set description
   *
   * @param string $description
   * @return Tag
   */
  public function setDescription($description) {
    $this->description = $description;
    return $this;
  }

  /**
   * Get description
   *
   * @return string
   */
  public function getDescription() {
    return $this->description;
  }
  
  /**
   * Set parent
   *
   * @param \Civi\Core\Tag $parent
   * @return Tag
   */
  public function setParent(\Civi\Core\Tag $parent = null) {
    $this->parent = $parent;
    return $this;
  }

  /**
   * Get parent
   *
   * @return \Civi\Core\Tag
   */
  public function getParent() {
    return $this->parent;
  }
  
  /**
   * Set isSelectable
   *
   * @param boolean $isSelectable
   * @return Tag
   */
  public function setIsSelectable($isSelectable) {
    $this->isSelectable = $isSelectable;
    return $this;
  }

  /**
   * Get isSelectable
   *
   * @return boolean
   */
  public function getIsSelectable() {
    return $this->isSelectable;
  }
  
  /**
   * Set isReserved
   *
   * @param boolean $isReserved
   * @return Tag
   */
  public function setIsReserved($isReserved) {
    $this->isReserved = $isReserved;
    return $this;
  }

  /**
   * Get isReserved
   *
   * @return boolean
   */
  public function getIsReserved() {
    return $this->isReserved;
  }
  
  /**
   * Set isTagset
   *
   * @param boolean $isTagset
   * @return Tag
   */
  public function setIsTagset($isTagset) {
    $this->isTagset = $isTagset;
    return $this;
  }

  /**
   * Get isTagset
   *
   * @return boolean
   */
  public function getIsTagset() {
    return $this->isTagset;
  }
  
  /**
   * Set usedFor
   *
   * @param string $usedFor
   * @return Tag
   */
  public function setUsedFor($usedFor) {
    $this->usedFor = $usedFor;
    return $this;
  }

  /**
   * Get usedFor
   *
   * @return string
   */
  public function getUsedFor() {
    return $this->usedFor;
  }
  
  /**
   * Set created
   *
   * @param \Civi\Contact\Contact $created
   * @return Tag
   */
  public function setCreated(\Civi\Contact\Contact $created = null) {
    $this->created = $created;
    return $this;
  }

  /**
   * Get created
   *
   * @return \Civi\Contact\Contact
   */
  public function getCreated() {
    return $this->created;
  }
  
  /**
   * Set createdDate
   *
   * @param datetime $createdDate
   * @return Tag
   */
  public function setCreatedDate($createdDate) {
    $this->createdDate = $createdDate;
    return $this;
  }

  /**
   * Get createdDate
   *
   * @return datetime
   */
  public function getCreatedDate() {
    return $this->createdDate;
  }

}

