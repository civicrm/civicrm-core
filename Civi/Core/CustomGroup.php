<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/CustomGroup.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * CustomGroup
 *
 * @ORM\Table(name="civicrm_custom_group", uniqueConstraints={@ORM\UniqueConstraint(name="UI_title_extends", columns={"title","extends"}),@ORM\UniqueConstraint(name="UI_name_extends", columns={"name","extends"})}, indexes={@ORM\Index(name="FK_civicrm_custom_group_created_id", columns={"created_id"})})
 * @ORM\Entity
 */
class CustomGroup extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=64, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var string
   *
   * @ORM\Column(name="title", type="string", length=64, nullable=true)
   * 
   */
  private $title;
  
  /**
   * @var string
   *
   * @ORM\Column(name="extends", type="string", length=255, nullable=false)
   * 
   */
  private $extends = 'Contact';
  
  /**
   * @var integer
   *
   * @ORM\Column(name="extends_entity_column_id", type="integer", nullable=false, options={"unsigned":true})
   * 
   */
  private $extendsEntityColumnId = 'NULL';
  
  /**
   * @var string
   *
   * @ORM\Column(name="extends_entity_column_value", type="string", length=255, nullable=true)
   * 
   */
  private $extendsEntityColumnValue;
  
  /**
   * @var string
   *
   * @ORM\Column(name="style", type="string", length=15, nullable=true)
   * 
   */
  private $style;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="collapse_display", type="integer", nullable=false, options={"unsigned":true})
   * 
   */
  private $collapseDisplay = '0';
  
  /**
   * @var text
   *
   * @ORM\Column(name="help_pre", type="text", nullable=true)
   * 
   */
  private $helpPre;
  
  /**
   * @var text
   *
   * @ORM\Column(name="help_post", type="text", nullable=true)
   * 
   */
  private $helpPost;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="weight", type="integer", nullable=false, options={"unsigned":true})
   * 
   */
  private $weight = '1';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_active", type="boolean", nullable=true)
   * 
   */
  private $isActive;
  
  /**
   * @var string
   *
   * @ORM\Column(name="table_name", type="string", length=255, nullable=true)
   * 
   */
  private $tableName;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_multiple", type="boolean", nullable=true)
   * 
   */
  private $isMultiple;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="min_multiple", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $minMultiple;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="max_multiple", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $maxMultiple;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="collapse_adv_display", type="integer", nullable=false, options={"unsigned":true})
   * 
   */
  private $collapseAdvDisplay = '0';
  
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="created_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $created;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="created_date", type="datetime", nullable=true)
   * 
   */
  private $createdDate;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_reserved", type="boolean", nullable=false)
   * 
   */
  private $isReserved = '0';

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set name
   *
   * @param string $name
   * @return CustomGroup
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set title
   *
   * @param string $title
   * @return CustomGroup
   */
  public function setTitle($title) {
    $this->title = $title;
    return $this;
  }

  /**
   * Get title
   *
   * @return string
   */
  public function getTitle() {
    return $this->title;
  }
  
  /**
   * Set extends
   *
   * @param string $extends
   * @return CustomGroup
   */
  public function setExtends($extends) {
    $this->extends = $extends;
    return $this;
  }

  /**
   * Get extends
   *
   * @return string
   */
  public function getExtends() {
    return $this->extends;
  }
  
  /**
   * Set extendsEntityColumnId
   *
   * @param integer $extendsEntityColumnId
   * @return CustomGroup
   */
  public function setExtendsEntityColumnId($extendsEntityColumnId) {
    $this->extendsEntityColumnId = $extendsEntityColumnId;
    return $this;
  }

  /**
   * Get extendsEntityColumnId
   *
   * @return integer
   */
  public function getExtendsEntityColumnId() {
    return $this->extendsEntityColumnId;
  }
  
  /**
   * Set extendsEntityColumnValue
   *
   * @param string $extendsEntityColumnValue
   * @return CustomGroup
   */
  public function setExtendsEntityColumnValue($extendsEntityColumnValue) {
    $this->extendsEntityColumnValue = $extendsEntityColumnValue;
    return $this;
  }

  /**
   * Get extendsEntityColumnValue
   *
   * @return string
   */
  public function getExtendsEntityColumnValue() {
    return $this->extendsEntityColumnValue;
  }
  
  /**
   * Set style
   *
   * @param string $style
   * @return CustomGroup
   */
  public function setStyle($style) {
    $this->style = $style;
    return $this;
  }

  /**
   * Get style
   *
   * @return string
   */
  public function getStyle() {
    return $this->style;
  }
  
  /**
   * Set collapseDisplay
   *
   * @param integer $collapseDisplay
   * @return CustomGroup
   */
  public function setCollapseDisplay($collapseDisplay) {
    $this->collapseDisplay = $collapseDisplay;
    return $this;
  }

  /**
   * Get collapseDisplay
   *
   * @return integer
   */
  public function getCollapseDisplay() {
    return $this->collapseDisplay;
  }
  
  /**
   * Set helpPre
   *
   * @param text $helpPre
   * @return CustomGroup
   */
  public function setHelpPre($helpPre) {
    $this->helpPre = $helpPre;
    return $this;
  }

  /**
   * Get helpPre
   *
   * @return text
   */
  public function getHelpPre() {
    return $this->helpPre;
  }
  
  /**
   * Set helpPost
   *
   * @param text $helpPost
   * @return CustomGroup
   */
  public function setHelpPost($helpPost) {
    $this->helpPost = $helpPost;
    return $this;
  }

  /**
   * Get helpPost
   *
   * @return text
   */
  public function getHelpPost() {
    return $this->helpPost;
  }
  
  /**
   * Set weight
   *
   * @param integer $weight
   * @return CustomGroup
   */
  public function setWeight($weight) {
    $this->weight = $weight;
    return $this;
  }

  /**
   * Get weight
   *
   * @return integer
   */
  public function getWeight() {
    return $this->weight;
  }
  
  /**
   * Set isActive
   *
   * @param boolean $isActive
   * @return CustomGroup
   */
  public function setIsActive($isActive) {
    $this->isActive = $isActive;
    return $this;
  }

  /**
   * Get isActive
   *
   * @return boolean
   */
  public function getIsActive() {
    return $this->isActive;
  }
  
  /**
   * Set tableName
   *
   * @param string $tableName
   * @return CustomGroup
   */
  public function setTableName($tableName) {
    $this->tableName = $tableName;
    return $this;
  }

  /**
   * Get tableName
   *
   * @return string
   */
  public function getTableName() {
    return $this->tableName;
  }
  
  /**
   * Set isMultiple
   *
   * @param boolean $isMultiple
   * @return CustomGroup
   */
  public function setIsMultiple($isMultiple) {
    $this->isMultiple = $isMultiple;
    return $this;
  }

  /**
   * Get isMultiple
   *
   * @return boolean
   */
  public function getIsMultiple() {
    return $this->isMultiple;
  }
  
  /**
   * Set minMultiple
   *
   * @param integer $minMultiple
   * @return CustomGroup
   */
  public function setMinMultiple($minMultiple) {
    $this->minMultiple = $minMultiple;
    return $this;
  }

  /**
   * Get minMultiple
   *
   * @return integer
   */
  public function getMinMultiple() {
    return $this->minMultiple;
  }
  
  /**
   * Set maxMultiple
   *
   * @param integer $maxMultiple
   * @return CustomGroup
   */
  public function setMaxMultiple($maxMultiple) {
    $this->maxMultiple = $maxMultiple;
    return $this;
  }

  /**
   * Get maxMultiple
   *
   * @return integer
   */
  public function getMaxMultiple() {
    return $this->maxMultiple;
  }
  
  /**
   * Set collapseAdvDisplay
   *
   * @param integer $collapseAdvDisplay
   * @return CustomGroup
   */
  public function setCollapseAdvDisplay($collapseAdvDisplay) {
    $this->collapseAdvDisplay = $collapseAdvDisplay;
    return $this;
  }

  /**
   * Get collapseAdvDisplay
   *
   * @return integer
   */
  public function getCollapseAdvDisplay() {
    return $this->collapseAdvDisplay;
  }
  
  /**
   * Set created
   *
   * @param \Civi\Contact\Contact $created
   * @return CustomGroup
   */
  public function setCreated(\Civi\Contact\Contact $created = null) {
    $this->created = $created;
    return $this;
  }

  /**
   * Get created
   *
   * @return \Civi\Contact\Contact
   */
  public function getCreated() {
    return $this->created;
  }
  
  /**
   * Set createdDate
   *
   * @param datetime $createdDate
   * @return CustomGroup
   */
  public function setCreatedDate($createdDate) {
    $this->createdDate = $createdDate;
    return $this;
  }

  /**
   * Get createdDate
   *
   * @return datetime
   */
  public function getCreatedDate() {
    return $this->createdDate;
  }
  
  /**
   * Set isReserved
   *
   * @param boolean $isReserved
   * @return CustomGroup
   */
  public function setIsReserved($isReserved) {
    $this->isReserved = $isReserved;
    return $this;
  }

  /**
   * Get isReserved
   *
   * @return boolean
   */
  public function getIsReserved() {
    return $this->isReserved;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'name' => array(
      
        'name' => 'name',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Name'),
                                 'maxlength' => 64,
                         'size' => CRM_Utils_Type::BIG,
                           
                                    
                          ),
      
              'title' => array(
      
        'name' => 'title',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Title'),
                        'required' => true,
                         'maxlength' => 64,
                         'size' => CRM_Utils_Type::BIG,
                           
                                    
                          ),
      
              'extends' => array(
      
        'name' => 'extends',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Extends'),
                                 'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                           'default' => 'Contact',
         
                          ),
      
              'extends_entity_column_id' => array(
      
        'name' => 'extends_entity_column_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                           'default' => 'NULL',
         
                          ),
      
              'extends_entity_column_value' => array(
      
        'name' => 'extends_entity_column_value',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Extends Entity Column Value'),
                                 'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                    
                          ),
      
              'style' => array(
      
        'name' => 'style',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Style'),
                                 'maxlength' => 15,
                         'size' => CRM_Utils_Type::TWELVE,
                           
                                    
                                     'pseudoconstant' => array(
                                '0' => 'not in database',
                    )
                 ),
      
              'collapse_display' => array(
      
        'name' => 'collapse_display',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Collapse Display'),
                                                     
                                    
                          ),
      
              'help_pre' => array(
      
        'name' => 'help_pre',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Help Pre'),
                                                   'rows' => 4,
                         'cols' => 80,
         
                                    
                          ),
      
              'help_post' => array(
      
        'name' => 'help_post',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Help Post'),
                                                   'rows' => 4,
                         'cols' => 80,
         
                                    
                          ),
      
              'weight' => array(
      
        'name' => 'weight',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Weight'),
                        'required' => true,
                                             
                                           'default' => '1',
         
                          ),
      
              'is_active' => array(
      
        'name' => 'is_active',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                    
                          ),
      
              'table_name' => array(
      
        'name' => 'table_name',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Table Name'),
                                 'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                    
                          ),
      
              'is_multiple' => array(
      
        'name' => 'is_multiple',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                    
                          ),
      
              'min_multiple' => array(
      
        'name' => 'min_multiple',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Min Multiple'),
                                                     
                                    
                          ),
      
              'max_multiple' => array(
      
        'name' => 'max_multiple',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Max Multiple'),
                                                     
                                    
                          ),
      
              'collapse_adv_display' => array(
      
        'name' => 'collapse_adv_display',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Collapse Adv Display'),
                                                     
                                    
                          ),
      
              'created_id' => array(
      
        'name' => 'created_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                'FKClassName' => 'CRM_Contact_Contact',
                          ),
      
              'created_date' => array(
      
        'name' => 'created_date',
        'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
                'title' => ts('Custom Group Created Date'),
                                                     
                                    
                          ),
      
              'is_reserved' => array(
      
        'name' => 'is_reserved',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                    
                          ),
             );
    }
    return self::$_fields;
  }

}

