<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/Website.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * Website
 *
 * @ORM\Table(name="civicrm_website", indexes={@ORM\Index(name="UI_website_type_id", columns={"website_type_id"}),@ORM\Index(name="FK_civicrm_website_contact_id", columns={"contact_id"})})
 * @ORM\Entity
 */
class Website extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contact_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $contact;
  
  /**
   * @var string
   *
   * @ORM\Column(name="url", type="string", length=128, nullable=true)
   * 
   */
  private $url;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="website_type_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $websiteTypeId;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set contact
   *
   * @param \Civi\Contact\Contact $contact
   * @return Website
   */
  public function setContact(\Civi\Contact\Contact $contact = null) {
    $this->contact = $contact;
    return $this;
  }

  /**
   * Get contact
   *
   * @return \Civi\Contact\Contact
   */
  public function getContact() {
    return $this->contact;
  }
  
  /**
   * Set url
   *
   * @param string $url
   * @return Website
   */
  public function setUrl($url) {
    $this->url = $url;
    return $this;
  }

  /**
   * Get url
   *
   * @return string
   */
  public function getUrl() {
    return $this->url;
  }
  
  /**
   * Set websiteTypeId
   *
   * @param integer $websiteTypeId
   * @return Website
   */
  public function setWebsiteTypeId($websiteTypeId) {
    $this->websiteTypeId = $websiteTypeId;
    return $this;
  }

  /**
   * Get websiteTypeId
   *
   * @return integer
   */
  public function getWebsiteTypeId() {
    return $this->websiteTypeId;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Website ID'),
                        'required' => true,
                                             
                                    
                          ),
      
              'contact_id' => array(
      
        'name' => 'contact_id',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Contact'),
                                                     
                                    
                'FKClassName' => 'CRM_Contact_Contact',
                          ),
      
              'url' => array(
      
        'name' => 'url',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Website'),
                                 'maxlength' => 128,
                         'size' => CRM_Utils_Type::BIG,
                           
                'import' => true,
        'where' => 'civicrm_website.url',
        'headerPattern' => '/Website/i',
        'dataPattern' => '/^[A-Za-z][0-9A-Za-z]{20,}$/',
                         'export' => true,
                                   
                          ),
      
              'website_type_id' => array(
      
        'name' => 'website_type_id',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Website Type'),
                                                     
                                    
                                     'pseudoconstant' => array(
                                'optionGroupName' => 'website_type',
                    )
                 ),
             );
    }
    return self::$_fields;
  }

}

