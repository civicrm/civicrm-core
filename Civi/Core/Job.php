<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/Job.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * Job
 *
 * @ORM\Table(name="civicrm_job", indexes={@ORM\Index(name="FK_civicrm_job_domain_id", columns={"domain_id"})})
 * @ORM\Entity
 */
class Job extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Core\Domain
   *
   * @ORM\ManyToOne(targetEntity="Civi\Core\Domain")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="domain_id", referencedColumnName="id")})
   */
  private $domain;
  
  /**
   * @var string
   *
   * @ORM\Column(name="run_frequency", type="string", length=8, nullable=false)
   * 
   */
  private $runFrequency = '"Daily"';
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="last_run", type="datetime", nullable=false)
   * 
   */
  private $lastRun = 'NULL';
  
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=255, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var string
   *
   * @ORM\Column(name="description", type="string", length=255, nullable=true)
   * 
   */
  private $description;
  
  /**
   * @var string
   *
   * @ORM\Column(name="api_entity", type="string", length=255, nullable=true)
   * 
   */
  private $apiEntity;
  
  /**
   * @var string
   *
   * @ORM\Column(name="api_action", type="string", length=255, nullable=true)
   * 
   */
  private $apiAction;
  
  /**
   * @var text
   *
   * @ORM\Column(name="parameters", type="text", nullable=true)
   * 
   */
  private $parameters;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_active", type="boolean", nullable=true)
   * 
   */
  private $isActive;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set domain
   *
   * @param \Civi\Core\Domain $domain
   * @return Job
   */
  public function setDomain(\Civi\Core\Domain $domain = null) {
    $this->domain = $domain;
    return $this;
  }

  /**
   * Get domain
   *
   * @return \Civi\Core\Domain
   */
  public function getDomain() {
    return $this->domain;
  }
  
  /**
   * Set runFrequency
   *
   * @param string $runFrequency
   * @return Job
   */
  public function setRunFrequency($runFrequency) {
    $this->runFrequency = $runFrequency;
    return $this;
  }

  /**
   * Get runFrequency
   *
   * @return string
   */
  public function getRunFrequency() {
    return $this->runFrequency;
  }
  
  /**
   * Set lastRun
   *
   * @param datetime $lastRun
   * @return Job
   */
  public function setLastRun($lastRun) {
    $this->lastRun = $lastRun;
    return $this;
  }

  /**
   * Get lastRun
   *
   * @return datetime
   */
  public function getLastRun() {
    return $this->lastRun;
  }
  
  /**
   * Set name
   *
   * @param string $name
   * @return Job
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set description
   *
   * @param string $description
   * @return Job
   */
  public function setDescription($description) {
    $this->description = $description;
    return $this;
  }

  /**
   * Get description
   *
   * @return string
   */
  public function getDescription() {
    return $this->description;
  }
  
  /**
   * Set apiEntity
   *
   * @param string $apiEntity
   * @return Job
   */
  public function setApiEntity($apiEntity) {
    $this->apiEntity = $apiEntity;
    return $this;
  }

  /**
   * Get apiEntity
   *
   * @return string
   */
  public function getApiEntity() {
    return $this->apiEntity;
  }
  
  /**
   * Set apiAction
   *
   * @param string $apiAction
   * @return Job
   */
  public function setApiAction($apiAction) {
    $this->apiAction = $apiAction;
    return $this;
  }

  /**
   * Get apiAction
   *
   * @return string
   */
  public function getApiAction() {
    return $this->apiAction;
  }
  
  /**
   * Set parameters
   *
   * @param text $parameters
   * @return Job
   */
  public function setParameters($parameters) {
    $this->parameters = $parameters;
    return $this;
  }

  /**
   * Get parameters
   *
   * @return text
   */
  public function getParameters() {
    return $this->parameters;
  }
  
  /**
   * Set isActive
   *
   * @param boolean $isActive
   * @return Job
   */
  public function setIsActive($isActive) {
    $this->isActive = $isActive;
    return $this;
  }

  /**
   * Get isActive
   *
   * @return boolean
   */
  public function getIsActive() {
    return $this->isActive;
  }

}

