<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/File.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * File
 *
 * @ORM\Table(name="civicrm_file")
 * @ORM\Entity
 */
class File extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var integer
   *
   * @ORM\Column(name="file_type_id", type="integer", nullable=true)
   * 
   */
  private $fileTypeId;
  
  /**
   * @var string
   *
   * @ORM\Column(name="mime_type", type="string", length=255, nullable=true)
   * 
   */
  private $mimeType;
  
  /**
   * @var string
   *
   * @ORM\Column(name="uri", type="string", length=255, nullable=true)
   * 
   */
  private $uri;
  
  /**
   * @var mediumblob
   *
   * @ORM\Column(name="document", type="mediumblob", nullable=true)
   * 
   */
  private $document;
  
  /**
   * @var string
   *
   * @ORM\Column(name="description", type="string", length=255, nullable=true)
   * 
   */
  private $description;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="upload_date", type="datetime", nullable=true)
   * 
   */
  private $uploadDate;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set fileTypeId
   *
   * @param integer $fileTypeId
   * @return File
   */
  public function setFileTypeId($fileTypeId) {
    $this->fileTypeId = $fileTypeId;
    return $this;
  }

  /**
   * Get fileTypeId
   *
   * @return integer
   */
  public function getFileTypeId() {
    return $this->fileTypeId;
  }
  
  /**
   * Set mimeType
   *
   * @param string $mimeType
   * @return File
   */
  public function setMimeType($mimeType) {
    $this->mimeType = $mimeType;
    return $this;
  }

  /**
   * Get mimeType
   *
   * @return string
   */
  public function getMimeType() {
    return $this->mimeType;
  }
  
  /**
   * Set uri
   *
   * @param string $uri
   * @return File
   */
  public function setUri($uri) {
    $this->uri = $uri;
    return $this;
  }

  /**
   * Get uri
   *
   * @return string
   */
  public function getUri() {
    return $this->uri;
  }
  
  /**
   * Set document
   *
   * @param mediumblob $document
   * @return File
   */
  public function setDocument($document) {
    $this->document = $document;
    return $this;
  }

  /**
   * Get document
   *
   * @return mediumblob
   */
  public function getDocument() {
    return $this->document;
  }
  
  /**
   * Set description
   *
   * @param string $description
   * @return File
   */
  public function setDescription($description) {
    $this->description = $description;
    return $this;
  }

  /**
   * Get description
   *
   * @return string
   */
  public function getDescription() {
    return $this->description;
  }
  
  /**
   * Set uploadDate
   *
   * @param datetime $uploadDate
   * @return File
   */
  public function setUploadDate($uploadDate) {
    $this->uploadDate = $uploadDate;
    return $this;
  }

  /**
   * Get uploadDate
   *
   * @return datetime
   */
  public function getUploadDate() {
    return $this->uploadDate;
  }

}

