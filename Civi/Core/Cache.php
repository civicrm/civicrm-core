<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/Cache.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * Cache
 *
 * @ORM\Table(name="civicrm_cache", uniqueConstraints={@ORM\UniqueConstraint(name="UI_group_path_date", columns={"group_name,path,created_date"})}, indexes={@ORM\Index(name="FK_civicrm_cache_component_id", columns={"component_id"})})
 * @ORM\Entity
 */
class Cache extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="group_name", type="string", length=32, nullable=true)
   * 
   */
  private $groupName;
  
  /**
   * @var string
   *
   * @ORM\Column(name="path", type="string", length=255, nullable=true)
   * 
   */
  private $path;
  
  /**
   * @var longtext
   *
   * @ORM\Column(name="data", type="longtext", nullable=true)
   * 
   */
  private $data;
  
  /**
   * @var \Civi\Core\Component
   *
   * @ORM\ManyToOne(targetEntity="Civi\Core\Component")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="component_id", referencedColumnName="id")})
   */
  private $component;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="created_date", type="datetime", nullable=true)
   * 
   */
  private $createdDate;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="expired_date", type="datetime", nullable=true)
   * 
   */
  private $expiredDate;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set groupName
   *
   * @param string $groupName
   * @return Cache
   */
  public function setGroupName($groupName) {
    $this->groupName = $groupName;
    return $this;
  }

  /**
   * Get groupName
   *
   * @return string
   */
  public function getGroupName() {
    return $this->groupName;
  }
  
  /**
   * Set path
   *
   * @param string $path
   * @return Cache
   */
  public function setPath($path) {
    $this->path = $path;
    return $this;
  }

  /**
   * Get path
   *
   * @return string
   */
  public function getPath() {
    return $this->path;
  }
  
  /**
   * Set data
   *
   * @param longtext $data
   * @return Cache
   */
  public function setData($data) {
    $this->data = $data;
    return $this;
  }

  /**
   * Get data
   *
   * @return longtext
   */
  public function getData() {
    return $this->data;
  }
  
  /**
   * Set component
   *
   * @param \Civi\Core\Component $component
   * @return Cache
   */
  public function setComponent(\Civi\Core\Component $component = null) {
    $this->component = $component;
    return $this;
  }

  /**
   * Get component
   *
   * @return \Civi\Core\Component
   */
  public function getComponent() {
    return $this->component;
  }
  
  /**
   * Set createdDate
   *
   * @param datetime $createdDate
   * @return Cache
   */
  public function setCreatedDate($createdDate) {
    $this->createdDate = $createdDate;
    return $this;
  }

  /**
   * Get createdDate
   *
   * @return datetime
   */
  public function getCreatedDate() {
    return $this->createdDate;
  }
  
  /**
   * Set expiredDate
   *
   * @param datetime $expiredDate
   * @return Cache
   */
  public function setExpiredDate($expiredDate) {
    $this->expiredDate = $expiredDate;
    return $this;
  }

  /**
   * Get expiredDate
   *
   * @return datetime
   */
  public function getExpiredDate() {
    return $this->expiredDate;
  }

}

