<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/JobLog.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * JobLog
 *
 * @ORM\Table(name="civicrm_job_log", indexes={@ORM\Index(name="FK_civicrm_job_log_domain_id", columns={"domain_id"})})
 * @ORM\Entity
 */
class JobLog extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Core\Domain
   *
   * @ORM\ManyToOne(targetEntity="Civi\Core\Domain")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="domain_id", referencedColumnName="id")})
   */
  private $domain;
  
  /**
   * @var timestamp
   *
   * @ORM\Column(name="run_time", type="timestamp", nullable=true)
   * 
   */
  private $runTime;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="job_id", type="integer", nullable=true)
   * 
   */
  private $jobId;
  
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=255, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var string
   *
   * @ORM\Column(name="command", type="string", length=255, nullable=true)
   * 
   */
  private $command;
  
  /**
   * @var string
   *
   * @ORM\Column(name="description", type="string", length=255, nullable=true)
   * 
   */
  private $description;
  
  /**
   * @var text
   *
   * @ORM\Column(name="data", type="text", nullable=true)
   * 
   */
  private $data;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set domain
   *
   * @param \Civi\Core\Domain $domain
   * @return JobLog
   */
  public function setDomain(\Civi\Core\Domain $domain = null) {
    $this->domain = $domain;
    return $this;
  }

  /**
   * Get domain
   *
   * @return \Civi\Core\Domain
   */
  public function getDomain() {
    return $this->domain;
  }
  
  /**
   * Set runTime
   *
   * @param timestamp $runTime
   * @return JobLog
   */
  public function setRunTime($runTime) {
    $this->runTime = $runTime;
    return $this;
  }

  /**
   * Get runTime
   *
   * @return timestamp
   */
  public function getRunTime() {
    return $this->runTime;
  }
  
  /**
   * Set jobId
   *
   * @param integer $jobId
   * @return JobLog
   */
  public function setJobId($jobId) {
    $this->jobId = $jobId;
    return $this;
  }

  /**
   * Get jobId
   *
   * @return integer
   */
  public function getJobId() {
    return $this->jobId;
  }
  
  /**
   * Set name
   *
   * @param string $name
   * @return JobLog
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set command
   *
   * @param string $command
   * @return JobLog
   */
  public function setCommand($command) {
    $this->command = $command;
    return $this;
  }

  /**
   * Get command
   *
   * @return string
   */
  public function getCommand() {
    return $this->command;
  }
  
  /**
   * Set description
   *
   * @param string $description
   * @return JobLog
   */
  public function setDescription($description) {
    $this->description = $description;
    return $this;
  }

  /**
   * Get description
   *
   * @return string
   */
  public function getDescription() {
    return $this->description;
  }
  
  /**
   * Set data
   *
   * @param text $data
   * @return JobLog
   */
  public function setData($data) {
    $this->data = $data;
    return $this;
  }

  /**
   * Get data
   *
   * @return text
   */
  public function getData() {
    return $this->data;
  }

}

