<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/Extension.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * Extension
 *
 * @ORM\Table(name="civicrm_extension", uniqueConstraints={@ORM\UniqueConstraint(name="UI_extension_full_name", columns={"full_name"})}, indexes={@ORM\Index(name="UI_extension_name", columns={"name"})})
 * @ORM\Entity
 */
class Extension extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="type", type="string", length=8, nullable=true)
   * 
   */
  private $type;
  
  /**
   * @var string
   *
   * @ORM\Column(name="full_name", type="string", length=255, nullable=true)
   * 
   */
  private $fullName;
  
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=255, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var string
   *
   * @ORM\Column(name="label", type="string", length=255, nullable=true)
   * 
   */
  private $label;
  
  /**
   * @var string
   *
   * @ORM\Column(name="file", type="string", length=255, nullable=true)
   * 
   */
  private $file;
  
  /**
   * @var string
   *
   * @ORM\Column(name="schema_version", type="string", length=63, nullable=true)
   * 
   */
  private $schemaVersion;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_active", type="boolean", nullable=false)
   * 
   */
  private $isActive = '1';

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set type
   *
   * @param string $type
   * @return Extension
   */
  public function setType($type) {
    $this->type = $type;
    return $this;
  }

  /**
   * Get type
   *
   * @return string
   */
  public function getType() {
    return $this->type;
  }
  
  /**
   * Set fullName
   *
   * @param string $fullName
   * @return Extension
   */
  public function setFullName($fullName) {
    $this->fullName = $fullName;
    return $this;
  }

  /**
   * Get fullName
   *
   * @return string
   */
  public function getFullName() {
    return $this->fullName;
  }
  
  /**
   * Set name
   *
   * @param string $name
   * @return Extension
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set label
   *
   * @param string $label
   * @return Extension
   */
  public function setLabel($label) {
    $this->label = $label;
    return $this;
  }

  /**
   * Get label
   *
   * @return string
   */
  public function getLabel() {
    return $this->label;
  }
  
  /**
   * Set file
   *
   * @param string $file
   * @return Extension
   */
  public function setFile($file) {
    $this->file = $file;
    return $this;
  }

  /**
   * Get file
   *
   * @return string
   */
  public function getFile() {
    return $this->file;
  }
  
  /**
   * Set schemaVersion
   *
   * @param string $schemaVersion
   * @return Extension
   */
  public function setSchemaVersion($schemaVersion) {
    $this->schemaVersion = $schemaVersion;
    return $this;
  }

  /**
   * Get schemaVersion
   *
   * @return string
   */
  public function getSchemaVersion() {
    return $this->schemaVersion;
  }
  
  /**
   * Set isActive
   *
   * @param boolean $isActive
   * @return Extension
   */
  public function setIsActive($isActive) {
    $this->isActive = $isActive;
    return $this;
  }

  /**
   * Get isActive
   *
   * @return boolean
   */
  public function getIsActive() {
    return $this->isActive;
  }

}

