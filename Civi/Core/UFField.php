<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/UFField.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * UFField
 *
 * @ORM\Table(name="civicrm_uf_field", indexes={@ORM\Index(name="FK_civicrm_uf_field_uf_group_id", columns={"uf_group_id"}),@ORM\Index(name="FK_civicrm_uf_field_location_type_id", columns={"location_type_id"})})
 * @ORM\Entity
 */
class UFField extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Core\UFGroup
   *
   * @ORM\ManyToOne(targetEntity="Civi\Core\UFGroup")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="uf_group_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $ufGroup;
  
  /**
   * @var string
   *
   * @ORM\Column(name="field_name", type="string", length=64, nullable=true)
   * 
   */
  private $fieldName;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_active", type="boolean", nullable=false)
   * 
   */
  private $isActive = '1';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_view", type="boolean", nullable=false)
   * 
   */
  private $isView = '0';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_required", type="boolean", nullable=false)
   * 
   */
  private $isRequired = '0';
  
  /**
   * @var integer
   *
   * @ORM\Column(name="weight", type="integer", nullable=false, options={"unsigned":true})
   * 
   */
  private $weight = '1';
  
  /**
   * @var text
   *
   * @ORM\Column(name="help_post", type="text", nullable=true)
   * 
   */
  private $helpPost;
  
  /**
   * @var text
   *
   * @ORM\Column(name="help_pre", type="text", nullable=true)
   * 
   */
  private $helpPre;
  
  /**
   * @var string
   *
   * @ORM\Column(name="visibility", type="string", length=32, nullable=false)
   * 
   */
  private $visibility = 'User and User Admin Only';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="in_selector", type="boolean", nullable=false)
   * 
   */
  private $inSelector = '0';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_searchable", type="boolean", nullable=false)
   * 
   */
  private $isSearchable = '0';
  
  /**
   * @var \Civi\Core\LocationType
   *
   * @ORM\ManyToOne(targetEntity="Civi\Core\LocationType")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="location_type_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $locationType;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="phone_type_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $phoneTypeId;
  
  /**
   * @var string
   *
   * @ORM\Column(name="label", type="string", length=255, nullable=true)
   * 
   */
  private $label;
  
  /**
   * @var string
   *
   * @ORM\Column(name="field_type", type="string", length=255, nullable=true)
   * 
   */
  private $fieldType;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_reserved", type="boolean", nullable=true)
   * 
   */
  private $isReserved;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_multi_summary", type="boolean", nullable=false)
   * 
   */
  private $isMultiSummary = '0';

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set ufGroup
   *
   * @param \Civi\Core\UFGroup $ufGroup
   * @return UFField
   */
  public function setUfGroup(\Civi\Core\UFGroup $ufGroup = null) {
    $this->ufGroup = $ufGroup;
    return $this;
  }

  /**
   * Get ufGroup
   *
   * @return \Civi\Core\UFGroup
   */
  public function getUfGroup() {
    return $this->ufGroup;
  }
  
  /**
   * Set fieldName
   *
   * @param string $fieldName
   * @return UFField
   */
  public function setFieldName($fieldName) {
    $this->fieldName = $fieldName;
    return $this;
  }

  /**
   * Get fieldName
   *
   * @return string
   */
  public function getFieldName() {
    return $this->fieldName;
  }
  
  /**
   * Set isActive
   *
   * @param boolean $isActive
   * @return UFField
   */
  public function setIsActive($isActive) {
    $this->isActive = $isActive;
    return $this;
  }

  /**
   * Get isActive
   *
   * @return boolean
   */
  public function getIsActive() {
    return $this->isActive;
  }
  
  /**
   * Set isView
   *
   * @param boolean $isView
   * @return UFField
   */
  public function setIsView($isView) {
    $this->isView = $isView;
    return $this;
  }

  /**
   * Get isView
   *
   * @return boolean
   */
  public function getIsView() {
    return $this->isView;
  }
  
  /**
   * Set isRequired
   *
   * @param boolean $isRequired
   * @return UFField
   */
  public function setIsRequired($isRequired) {
    $this->isRequired = $isRequired;
    return $this;
  }

  /**
   * Get isRequired
   *
   * @return boolean
   */
  public function getIsRequired() {
    return $this->isRequired;
  }
  
  /**
   * Set weight
   *
   * @param integer $weight
   * @return UFField
   */
  public function setWeight($weight) {
    $this->weight = $weight;
    return $this;
  }

  /**
   * Get weight
   *
   * @return integer
   */
  public function getWeight() {
    return $this->weight;
  }
  
  /**
   * Set helpPost
   *
   * @param text $helpPost
   * @return UFField
   */
  public function setHelpPost($helpPost) {
    $this->helpPost = $helpPost;
    return $this;
  }

  /**
   * Get helpPost
   *
   * @return text
   */
  public function getHelpPost() {
    return $this->helpPost;
  }
  
  /**
   * Set helpPre
   *
   * @param text $helpPre
   * @return UFField
   */
  public function setHelpPre($helpPre) {
    $this->helpPre = $helpPre;
    return $this;
  }

  /**
   * Get helpPre
   *
   * @return text
   */
  public function getHelpPre() {
    return $this->helpPre;
  }
  
  /**
   * Set visibility
   *
   * @param string $visibility
   * @return UFField
   */
  public function setVisibility($visibility) {
    $this->visibility = $visibility;
    return $this;
  }

  /**
   * Get visibility
   *
   * @return string
   */
  public function getVisibility() {
    return $this->visibility;
  }
  
  /**
   * Set inSelector
   *
   * @param boolean $inSelector
   * @return UFField
   */
  public function setInSelector($inSelector) {
    $this->inSelector = $inSelector;
    return $this;
  }

  /**
   * Get inSelector
   *
   * @return boolean
   */
  public function getInSelector() {
    return $this->inSelector;
  }
  
  /**
   * Set isSearchable
   *
   * @param boolean $isSearchable
   * @return UFField
   */
  public function setIsSearchable($isSearchable) {
    $this->isSearchable = $isSearchable;
    return $this;
  }

  /**
   * Get isSearchable
   *
   * @return boolean
   */
  public function getIsSearchable() {
    return $this->isSearchable;
  }
  
  /**
   * Set locationType
   *
   * @param \Civi\Core\LocationType $locationType
   * @return UFField
   */
  public function setLocationType(\Civi\Core\LocationType $locationType = null) {
    $this->locationType = $locationType;
    return $this;
  }

  /**
   * Get locationType
   *
   * @return \Civi\Core\LocationType
   */
  public function getLocationType() {
    return $this->locationType;
  }
  
  /**
   * Set phoneTypeId
   *
   * @param integer $phoneTypeId
   * @return UFField
   */
  public function setPhoneTypeId($phoneTypeId) {
    $this->phoneTypeId = $phoneTypeId;
    return $this;
  }

  /**
   * Get phoneTypeId
   *
   * @return integer
   */
  public function getPhoneTypeId() {
    return $this->phoneTypeId;
  }
  
  /**
   * Set label
   *
   * @param string $label
   * @return UFField
   */
  public function setLabel($label) {
    $this->label = $label;
    return $this;
  }

  /**
   * Get label
   *
   * @return string
   */
  public function getLabel() {
    return $this->label;
  }
  
  /**
   * Set fieldType
   *
   * @param string $fieldType
   * @return UFField
   */
  public function setFieldType($fieldType) {
    $this->fieldType = $fieldType;
    return $this;
  }

  /**
   * Get fieldType
   *
   * @return string
   */
  public function getFieldType() {
    return $this->fieldType;
  }
  
  /**
   * Set isReserved
   *
   * @param boolean $isReserved
   * @return UFField
   */
  public function setIsReserved($isReserved) {
    $this->isReserved = $isReserved;
    return $this;
  }

  /**
   * Get isReserved
   *
   * @return boolean
   */
  public function getIsReserved() {
    return $this->isReserved;
  }
  
  /**
   * Set isMultiSummary
   *
   * @param boolean $isMultiSummary
   * @return UFField
   */
  public function setIsMultiSummary($isMultiSummary) {
    $this->isMultiSummary = $isMultiSummary;
    return $this;
  }

  /**
   * Get isMultiSummary
   *
   * @return boolean
   */
  public function getIsMultiSummary() {
    return $this->isMultiSummary;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'uf_group_id' => array(
      
        'name' => 'uf_group_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                'FKClassName' => 'CRM_Core_UFGroup',
                                     'pseudoconstant' => array(
                                'table' => 'civicrm_uf_group',
                      'keyColumn' => 'id',
                      'labelColumn' => 'title',
                    )
                 ),
      
              'field_name' => array(
      
        'name' => 'field_name',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Field Name'),
                        'required' => true,
                         'maxlength' => 64,
                         'size' => CRM_Utils_Type::BIG,
                           
                                    
                          ),
      
              'is_active' => array(
      
        'name' => 'is_active',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                           'default' => '1',
         
                          ),
      
              'is_view' => array(
      
        'name' => 'is_view',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                    
                          ),
      
              'is_required' => array(
      
        'name' => 'is_required',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                    
                          ),
      
              'weight' => array(
      
        'name' => 'weight',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Weight'),
                        'required' => true,
                                             
                                           'default' => '1',
         
                          ),
      
              'help_post' => array(
      
        'name' => 'help_post',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Help Post'),
                                                     
                                    
                          ),
      
              'help_pre' => array(
      
        'name' => 'help_pre',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Help Pre'),
                                                     
                                    
                          ),
      
              'visibility' => array(
      
        'name' => 'visibility',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Visibility'),
                                 'maxlength' => 32,
                         'size' => CRM_Utils_Type::MEDIUM,
                           
                                           'default' => 'User and User Admin Only',
         
                                     'pseudoconstant' => array(
                                '0' => 'not in database',
                    )
                 ),
      
              'in_selector' => array(
      
        'name' => 'in_selector',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                'title' => ts('In Selector'),
                                                     
                                    
                          ),
      
              'is_searchable' => array(
      
        'name' => 'is_searchable',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                    
                          ),
      
              'location_type_id' => array(
      
        'name' => 'location_type_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                'FKClassName' => 'CRM_Core_LocationType',
                          ),
      
              'phone_type_id' => array(
      
        'name' => 'phone_type_id',
        'type' => CRM_Utils_Type::T_INT,
                                                     
                                    
                          ),
      
              'label' => array(
      
        'name' => 'label',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Label'),
                        'required' => true,
                         'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                    
                          ),
      
              'field_type' => array(
      
        'name' => 'field_type',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Field Type'),
                                 'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                                    
                          ),
      
              'is_reserved' => array(
      
        'name' => 'is_reserved',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                    
                          ),
      
              'is_multi_summary' => array(
      
        'name' => 'is_multi_summary',
        'type' => CRM_Utils_Type::T_BOOLEAN,
                                                     
                                    
                          ),
             );
    }
    return self::$_fields;
  }

}

