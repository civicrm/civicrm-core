<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Core/Persistent.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * Persistent
 *
 * @ORM\Table(name="civicrm_persistent")
 * @ORM\Entity
 */
class Persistent extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var string
   *
   * @ORM\Column(name="context", type="string", length=255, nullable=true)
   * 
   */
  private $context;
  
  /**
   * @var string
   *
   * @ORM\Column(name="name", type="string", length=255, nullable=true)
   * 
   */
  private $name;
  
  /**
   * @var longtext
   *
   * @ORM\Column(name="data", type="longtext", nullable=true)
   * 
   */
  private $data;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_config", type="boolean", nullable=false)
   * 
   */
  private $isConfig = '0';

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set context
   *
   * @param string $context
   * @return Persistent
   */
  public function setContext($context) {
    $this->context = $context;
    return $this;
  }

  /**
   * Get context
   *
   * @return string
   */
  public function getContext() {
    return $this->context;
  }
  
  /**
   * Set name
   *
   * @param string $name
   * @return Persistent
   */
  public function setName($name) {
    $this->name = $name;
    return $this;
  }

  /**
   * Get name
   *
   * @return string
   */
  public function getName() {
    return $this->name;
  }
  
  /**
   * Set data
   *
   * @param longtext $data
   * @return Persistent
   */
  public function setData($data) {
    $this->data = $data;
    return $this;
  }

  /**
   * Get data
   *
   * @return longtext
   */
  public function getData() {
    return $this->data;
  }
  
  /**
   * Set isConfig
   *
   * @param boolean $isConfig
   * @return Persistent
   */
  public function setIsConfig($isConfig) {
    $this->isConfig = $isConfig;
    return $this;
  }

  /**
   * Get isConfig
   *
   * @return boolean
   */
  public function getIsConfig() {
    return $this->isConfig;
  }

}

