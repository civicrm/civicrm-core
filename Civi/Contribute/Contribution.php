<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Contribute/Contribution.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * Contribution
 *
 * @ORM\Table(name="civicrm_contribution", uniqueConstraints={@ORM\UniqueConstraint(name="UI_contrib_trxn_id", columns={"trxn_id"}),@ORM\UniqueConstraint(name="UI_contrib_invoice_id", columns={"invoice_id"})}, indexes={@ORM\Index(name="UI_contrib_payment_instrument_id", columns={"payment_instrument_id"}),@ORM\Index(name="index_contribution_status", columns={"contribution_status_id"}),@ORM\Index(name="received_date", columns={"receive_date"}),@ORM\Index(name="check_number", columns={"check_number"}),@ORM\Index(name="FK_civicrm_contribution_contact_id", columns={"contact_id"}),@ORM\Index(name="FK_civicrm_contribution_financial_type_id", columns={"financial_type_id"}),@ORM\Index(name="FK_civicrm_contribution_contribution_page_id", columns={"contribution_page_id"}),@ORM\Index(name="FK_civicrm_contribution_contribution_recur_id", columns={"contribution_recur_id"}),@ORM\Index(name="FK_civicrm_contribution_address_id", columns={"address_id"}),@ORM\Index(name="FK_civicrm_contribution_campaign_id", columns={"campaign_id"})})
 * @ORM\Entity
 */
class Contribution extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contact_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $contact;
  
  /**
   * @var \Civi\Financial\FinancialType
   *
   * @ORM\ManyToOne(targetEntity="Civi\Financial\FinancialType")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="financial_type_id", referencedColumnName="id")})
   */
  private $financialType;
  
  /**
   * @var \Civi\Contribute\ContributionPage
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contribute\ContributionPage")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contribution_page_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $contributionPage;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="payment_instrument_id", type="integer", nullable=true)
   * 
   */
  private $paymentInstrumentId;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="receive_date", type="datetime", nullable=true)
   * 
   */
  private $receiveDate;
  
  /**
   * @var float
   *
   * @ORM\Column(name="non_deductible_amount", type="float", nullable=false)
   * 
   */
  private $nonDeductibleAmount = '0';
  
  /**
   * @var float
   *
   * @ORM\Column(name="total_amount", type="float", nullable=true)
   * 
   */
  private $totalAmount;
  
  /**
   * @var float
   *
   * @ORM\Column(name="fee_amount", type="float", nullable=true)
   * 
   */
  private $feeAmount;
  
  /**
   * @var float
   *
   * @ORM\Column(name="net_amount", type="float", nullable=true)
   * 
   */
  private $netAmount;
  
  /**
   * @var string
   *
   * @ORM\Column(name="trxn_id", type="string", length=255, nullable=true)
   * 
   */
  private $trxnId;
  
  /**
   * @var string
   *
   * @ORM\Column(name="invoice_id", type="string", length=255, nullable=true)
   * 
   */
  private $invoiceId;
  
  /**
   * @var string
   *
   * @ORM\Column(name="currency", type="string", length=3, nullable=false)
   * 
   */
  private $currency = 'NULL';
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="cancel_date", type="datetime", nullable=true)
   * 
   */
  private $cancelDate;
  
  /**
   * @var text
   *
   * @ORM\Column(name="cancel_reason", type="text", nullable=true)
   * 
   */
  private $cancelReason;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="receipt_date", type="datetime", nullable=true)
   * 
   */
  private $receiptDate;
  
  /**
   * @var datetime
   *
   * @ORM\Column(name="thankyou_date", type="datetime", nullable=true)
   * 
   */
  private $thankyouDate;
  
  /**
   * @var string
   *
   * @ORM\Column(name="source", type="string", length=255, nullable=true)
   * 
   */
  private $source;
  
  /**
   * @var text
   *
   * @ORM\Column(name="amount_level", type="text", nullable=true)
   * 
   */
  private $amountLevel;
  
  /**
   * @var \Civi\Contribute\ContributionRecur
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contribute\ContributionRecur")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contribution_recur_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $contributionRecur;
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_test", type="boolean", nullable=false)
   * 
   */
  private $isTest = '0';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="is_pay_later", type="boolean", nullable=false)
   * 
   */
  private $isPayLater = '0';
  
  /**
   * @var integer
   *
   * @ORM\Column(name="contribution_status_id", type="integer", nullable=false)
   * 
   */
  private $contributionStatusId = '1';
  
  /**
   * @var \Civi\Core\Address
   *
   * @ORM\ManyToOne(targetEntity="Civi\Core\Address")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="address_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $address;
  
  /**
   * @var string
   *
   * @ORM\Column(name="check_number", type="string", length=255, nullable=true)
   * 
   */
  private $checkNumber;
  
  /**
   * @var \Civi\Campaign\Campaign
   *
   * @ORM\ManyToOne(targetEntity="Civi\Campaign\Campaign")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="campaign_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $campaign;

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set contact
   *
   * @param \Civi\Contact\Contact $contact
   * @return Contribution
   */
  public function setContact(\Civi\Contact\Contact $contact = null) {
    $this->contact = $contact;
    return $this;
  }

  /**
   * Get contact
   *
   * @return \Civi\Contact\Contact
   */
  public function getContact() {
    return $this->contact;
  }
  
  /**
   * Set financialType
   *
   * @param \Civi\Financial\FinancialType $financialType
   * @return Contribution
   */
  public function setFinancialType(\Civi\Financial\FinancialType $financialType = null) {
    $this->financialType = $financialType;
    return $this;
  }

  /**
   * Get financialType
   *
   * @return \Civi\Financial\FinancialType
   */
  public function getFinancialType() {
    return $this->financialType;
  }
  
  /**
   * Set contributionPage
   *
   * @param \Civi\Contribute\ContributionPage $contributionPage
   * @return Contribution
   */
  public function setContributionPage(\Civi\Contribute\ContributionPage $contributionPage = null) {
    $this->contributionPage = $contributionPage;
    return $this;
  }

  /**
   * Get contributionPage
   *
   * @return \Civi\Contribute\ContributionPage
   */
  public function getContributionPage() {
    return $this->contributionPage;
  }
  
  /**
   * Set paymentInstrumentId
   *
   * @param integer $paymentInstrumentId
   * @return Contribution
   */
  public function setPaymentInstrumentId($paymentInstrumentId) {
    $this->paymentInstrumentId = $paymentInstrumentId;
    return $this;
  }

  /**
   * Get paymentInstrumentId
   *
   * @return integer
   */
  public function getPaymentInstrumentId() {
    return $this->paymentInstrumentId;
  }
  
  /**
   * Set receiveDate
   *
   * @param datetime $receiveDate
   * @return Contribution
   */
  public function setReceiveDate($receiveDate) {
    $this->receiveDate = $receiveDate;
    return $this;
  }

  /**
   * Get receiveDate
   *
   * @return datetime
   */
  public function getReceiveDate() {
    return $this->receiveDate;
  }
  
  /**
   * Set nonDeductibleAmount
   *
   * @param float $nonDeductibleAmount
   * @return Contribution
   */
  public function setNonDeductibleAmount($nonDeductibleAmount) {
    $this->nonDeductibleAmount = $nonDeductibleAmount;
    return $this;
  }

  /**
   * Get nonDeductibleAmount
   *
   * @return float
   */
  public function getNonDeductibleAmount() {
    return $this->nonDeductibleAmount;
  }
  
  /**
   * Set totalAmount
   *
   * @param float $totalAmount
   * @return Contribution
   */
  public function setTotalAmount($totalAmount) {
    $this->totalAmount = $totalAmount;
    return $this;
  }

  /**
   * Get totalAmount
   *
   * @return float
   */
  public function getTotalAmount() {
    return $this->totalAmount;
  }
  
  /**
   * Set feeAmount
   *
   * @param float $feeAmount
   * @return Contribution
   */
  public function setFeeAmount($feeAmount) {
    $this->feeAmount = $feeAmount;
    return $this;
  }

  /**
   * Get feeAmount
   *
   * @return float
   */
  public function getFeeAmount() {
    return $this->feeAmount;
  }
  
  /**
   * Set netAmount
   *
   * @param float $netAmount
   * @return Contribution
   */
  public function setNetAmount($netAmount) {
    $this->netAmount = $netAmount;
    return $this;
  }

  /**
   * Get netAmount
   *
   * @return float
   */
  public function getNetAmount() {
    return $this->netAmount;
  }
  
  /**
   * Set trxnId
   *
   * @param string $trxnId
   * @return Contribution
   */
  public function setTrxnId($trxnId) {
    $this->trxnId = $trxnId;
    return $this;
  }

  /**
   * Get trxnId
   *
   * @return string
   */
  public function getTrxnId() {
    return $this->trxnId;
  }
  
  /**
   * Set invoiceId
   *
   * @param string $invoiceId
   * @return Contribution
   */
  public function setInvoiceId($invoiceId) {
    $this->invoiceId = $invoiceId;
    return $this;
  }

  /**
   * Get invoiceId
   *
   * @return string
   */
  public function getInvoiceId() {
    return $this->invoiceId;
  }
  
  /**
   * Set currency
   *
   * @param string $currency
   * @return Contribution
   */
  public function setCurrency($currency) {
    $this->currency = $currency;
    return $this;
  }

  /**
   * Get currency
   *
   * @return string
   */
  public function getCurrency() {
    return $this->currency;
  }
  
  /**
   * Set cancelDate
   *
   * @param datetime $cancelDate
   * @return Contribution
   */
  public function setCancelDate($cancelDate) {
    $this->cancelDate = $cancelDate;
    return $this;
  }

  /**
   * Get cancelDate
   *
   * @return datetime
   */
  public function getCancelDate() {
    return $this->cancelDate;
  }
  
  /**
   * Set cancelReason
   *
   * @param text $cancelReason
   * @return Contribution
   */
  public function setCancelReason($cancelReason) {
    $this->cancelReason = $cancelReason;
    return $this;
  }

  /**
   * Get cancelReason
   *
   * @return text
   */
  public function getCancelReason() {
    return $this->cancelReason;
  }
  
  /**
   * Set receiptDate
   *
   * @param datetime $receiptDate
   * @return Contribution
   */
  public function setReceiptDate($receiptDate) {
    $this->receiptDate = $receiptDate;
    return $this;
  }

  /**
   * Get receiptDate
   *
   * @return datetime
   */
  public function getReceiptDate() {
    return $this->receiptDate;
  }
  
  /**
   * Set thankyouDate
   *
   * @param datetime $thankyouDate
   * @return Contribution
   */
  public function setThankyouDate($thankyouDate) {
    $this->thankyouDate = $thankyouDate;
    return $this;
  }

  /**
   * Get thankyouDate
   *
   * @return datetime
   */
  public function getThankyouDate() {
    return $this->thankyouDate;
  }
  
  /**
   * Set source
   *
   * @param string $source
   * @return Contribution
   */
  public function setSource($source) {
    $this->source = $source;
    return $this;
  }

  /**
   * Get source
   *
   * @return string
   */
  public function getSource() {
    return $this->source;
  }
  
  /**
   * Set amountLevel
   *
   * @param text $amountLevel
   * @return Contribution
   */
  public function setAmountLevel($amountLevel) {
    $this->amountLevel = $amountLevel;
    return $this;
  }

  /**
   * Get amountLevel
   *
   * @return text
   */
  public function getAmountLevel() {
    return $this->amountLevel;
  }
  
  /**
   * Set contributionRecur
   *
   * @param \Civi\Contribute\ContributionRecur $contributionRecur
   * @return Contribution
   */
  public function setContributionRecur(\Civi\Contribute\ContributionRecur $contributionRecur = null) {
    $this->contributionRecur = $contributionRecur;
    return $this;
  }

  /**
   * Get contributionRecur
   *
   * @return \Civi\Contribute\ContributionRecur
   */
  public function getContributionRecur() {
    return $this->contributionRecur;
  }
  
  /**
   * Set isTest
   *
   * @param boolean $isTest
   * @return Contribution
   */
  public function setIsTest($isTest) {
    $this->isTest = $isTest;
    return $this;
  }

  /**
   * Get isTest
   *
   * @return boolean
   */
  public function getIsTest() {
    return $this->isTest;
  }
  
  /**
   * Set isPayLater
   *
   * @param boolean $isPayLater
   * @return Contribution
   */
  public function setIsPayLater($isPayLater) {
    $this->isPayLater = $isPayLater;
    return $this;
  }

  /**
   * Get isPayLater
   *
   * @return boolean
   */
  public function getIsPayLater() {
    return $this->isPayLater;
  }
  
  /**
   * Set contributionStatusId
   *
   * @param integer $contributionStatusId
   * @return Contribution
   */
  public function setContributionStatusId($contributionStatusId) {
    $this->contributionStatusId = $contributionStatusId;
    return $this;
  }

  /**
   * Get contributionStatusId
   *
   * @return integer
   */
  public function getContributionStatusId() {
    return $this->contributionStatusId;
  }
  
  /**
   * Set address
   *
   * @param \Civi\Core\Address $address
   * @return Contribution
   */
  public function setAddress(\Civi\Core\Address $address = null) {
    $this->address = $address;
    return $this;
  }

  /**
   * Get address
   *
   * @return \Civi\Core\Address
   */
  public function getAddress() {
    return $this->address;
  }
  
  /**
   * Set checkNumber
   *
   * @param string $checkNumber
   * @return Contribution
   */
  public function setCheckNumber($checkNumber) {
    $this->checkNumber = $checkNumber;
    return $this;
  }

  /**
   * Get checkNumber
   *
   * @return string
   */
  public function getCheckNumber() {
    return $this->checkNumber;
  }
  
  /**
   * Set campaign
   *
   * @param \Civi\Campaign\Campaign $campaign
   * @return Contribution
   */
  public function setCampaign(\Civi\Campaign\Campaign $campaign = null) {
    $this->campaign = $campaign;
    return $this;
  }

  /**
   * Get campaign
   *
   * @return \Civi\Campaign\Campaign
   */
  public function getCampaign() {
    return $this->campaign;
  }

}

