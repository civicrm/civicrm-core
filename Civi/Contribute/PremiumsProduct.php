<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Contribute/PremiumsProduct.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Contribute;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * PremiumsProduct
 *
 * @ORM\Table(name="civicrm_premiums_product", indexes={@ORM\Index(name="FK_civicrm_premiums_product_premiums_id", columns={"premiums_id"}),@ORM\Index(name="FK_civicrm_premiums_product_product_id", columns={"product_id"}),@ORM\Index(name="FK_civicrm_premiums_product_financial_type_id", columns={"financial_type_id"})})
 * @ORM\Entity
 */
class PremiumsProduct extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Contribute\Premium
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contribute\Premium")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="premiums_id", referencedColumnName="id")})
   */
  private $premiums;
  
  /**
   * @var \Civi\Contribute\Product
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contribute\Product")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="product_id", referencedColumnName="id")})
   */
  private $product;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="weight", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $weight;
  
  /**
   * @var \Civi\Financial\FinancialType
   *
   * @ORM\ManyToOne(targetEntity="Civi\Financial\FinancialType")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="financial_type_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $financialType = 'NULL';

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set premiums
   *
   * @param \Civi\Contribute\Premium $premiums
   * @return PremiumsProduct
   */
  public function setPremiums(\Civi\Contribute\Premium $premiums = null) {
    $this->premiums = $premiums;
    return $this;
  }

  /**
   * Get premiums
   *
   * @return \Civi\Contribute\Premium
   */
  public function getPremiums() {
    return $this->premiums;
  }
  
  /**
   * Set product
   *
   * @param \Civi\Contribute\Product $product
   * @return PremiumsProduct
   */
  public function setProduct(\Civi\Contribute\Product $product = null) {
    $this->product = $product;
    return $this;
  }

  /**
   * Get product
   *
   * @return \Civi\Contribute\Product
   */
  public function getProduct() {
    return $this->product;
  }
  
  /**
   * Set weight
   *
   * @param integer $weight
   * @return PremiumsProduct
   */
  public function setWeight($weight) {
    $this->weight = $weight;
    return $this;
  }

  /**
   * Get weight
   *
   * @return integer
   */
  public function getWeight() {
    return $this->weight;
  }
  
  /**
   * Set financialType
   *
   * @param \Civi\Financial\FinancialType $financialType
   * @return PremiumsProduct
   */
  public function setFinancialType(\Civi\Financial\FinancialType $financialType = null) {
    $this->financialType = $financialType;
    return $this;
  }

  /**
   * Get financialType
   *
   * @return \Civi\Financial\FinancialType
   */
  public function getFinancialType() {
    return $this->financialType;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'premiums_id' => array(
      
        'name' => 'premiums_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                'FKClassName' => 'CRM_Contribute_Premium',
                          ),
      
              'product_id' => array(
      
        'name' => 'product_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                'FKClassName' => 'CRM_Contribute_Product',
                          ),
      
              'weight' => array(
      
        'name' => 'weight',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Weight'),
                        'required' => true,
                                             
                                    
                          ),
      
              'financial_type_id' => array(
      
        'name' => 'financial_type_id',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Financial Type'),
                                                     
                                           'default' => 'NULL',
         
                'FKClassName' => 'CRM_Financial_FinancialType',
                          ),
             );
    }
    return self::$_fields;
  }

}

