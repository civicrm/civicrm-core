<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Contribute/ContributionProduct.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Contribute;

require_once 'Civi/Core/Entity.php';

use Doctrine\ORM\Mapping as ORM;

/**
 * ContributionProduct
 *
 * @ORM\Table(name="civicrm_contribution_product", indexes={@ORM\Index(name="FK_civicrm_contribution_product_contribution_id", columns={"contribution_id"}),@ORM\Index(name="FK_civicrm_contribution_product_financial_type_id", columns={"financial_type_id"})})
 * @ORM\Entity
 */
class ContributionProduct extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false, options={"unsigned":true} )
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var integer
   *
   * @ORM\Column(name="product_id", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $productId;
  
  /**
   * @var \Civi\Contribute\Contribution
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contribute\Contribution")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contribution_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $contribution;
  
  /**
   * @var string
   *
   * @ORM\Column(name="product_option", type="string", length=255, nullable=true)
   * 
   */
  private $productOption;
  
  /**
   * @var integer
   *
   * @ORM\Column(name="quantity", type="integer", nullable=true, options={"unsigned":true})
   * 
   */
  private $quantity;
  
  /**
   * @var date
   *
   * @ORM\Column(name="fulfilled_date", type="date", nullable=true)
   * 
   */
  private $fulfilledDate;
  
  /**
   * @var date
   *
   * @ORM\Column(name="start_date", type="date", nullable=true)
   * 
   */
  private $startDate;
  
  /**
   * @var date
   *
   * @ORM\Column(name="end_date", type="date", nullable=true)
   * 
   */
  private $endDate;
  
  /**
   * @var text
   *
   * @ORM\Column(name="comment", type="text", nullable=true)
   * 
   */
  private $comment;
  
  /**
   * @var \Civi\Financial\FinancialType
   *
   * @ORM\ManyToOne(targetEntity="Civi\Financial\FinancialType")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="financial_type_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $financialType = 'NULL';

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set productId
   *
   * @param integer $productId
   * @return ContributionProduct
   */
  public function setProductId($productId) {
    $this->productId = $productId;
    return $this;
  }

  /**
   * Get productId
   *
   * @return integer
   */
  public function getProductId() {
    return $this->productId;
  }
  
  /**
   * Set contribution
   *
   * @param \Civi\Contribute\Contribution $contribution
   * @return ContributionProduct
   */
  public function setContribution(\Civi\Contribute\Contribution $contribution = null) {
    $this->contribution = $contribution;
    return $this;
  }

  /**
   * Get contribution
   *
   * @return \Civi\Contribute\Contribution
   */
  public function getContribution() {
    return $this->contribution;
  }
  
  /**
   * Set productOption
   *
   * @param string $productOption
   * @return ContributionProduct
   */
  public function setProductOption($productOption) {
    $this->productOption = $productOption;
    return $this;
  }

  /**
   * Get productOption
   *
   * @return string
   */
  public function getProductOption() {
    return $this->productOption;
  }
  
  /**
   * Set quantity
   *
   * @param integer $quantity
   * @return ContributionProduct
   */
  public function setQuantity($quantity) {
    $this->quantity = $quantity;
    return $this;
  }

  /**
   * Get quantity
   *
   * @return integer
   */
  public function getQuantity() {
    return $this->quantity;
  }
  
  /**
   * Set fulfilledDate
   *
   * @param date $fulfilledDate
   * @return ContributionProduct
   */
  public function setFulfilledDate($fulfilledDate) {
    $this->fulfilledDate = $fulfilledDate;
    return $this;
  }

  /**
   * Get fulfilledDate
   *
   * @return date
   */
  public function getFulfilledDate() {
    return $this->fulfilledDate;
  }
  
  /**
   * Set startDate
   *
   * @param date $startDate
   * @return ContributionProduct
   */
  public function setStartDate($startDate) {
    $this->startDate = $startDate;
    return $this;
  }

  /**
   * Get startDate
   *
   * @return date
   */
  public function getStartDate() {
    return $this->startDate;
  }
  
  /**
   * Set endDate
   *
   * @param date $endDate
   * @return ContributionProduct
   */
  public function setEndDate($endDate) {
    $this->endDate = $endDate;
    return $this;
  }

  /**
   * Get endDate
   *
   * @return date
   */
  public function getEndDate() {
    return $this->endDate;
  }
  
  /**
   * Set comment
   *
   * @param text $comment
   * @return ContributionProduct
   */
  public function setComment($comment) {
    $this->comment = $comment;
    return $this;
  }

  /**
   * Get comment
   *
   * @return text
   */
  public function getComment() {
    return $this->comment;
  }
  
  /**
   * Set financialType
   *
   * @param \Civi\Financial\FinancialType $financialType
   * @return ContributionProduct
   */
  public function setFinancialType(\Civi\Financial\FinancialType $financialType = null) {
    $this->financialType = $financialType;
    return $this;
  }

  /**
   * Get financialType
   *
   * @return \Civi\Financial\FinancialType
   */
  public function getFinancialType() {
    return $this->financialType;
  }

  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields( ) {
    if ( !self::$_fields) {
      self::$_fields = array (
      
              'id' => array(
      
        'name' => 'id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'product_id' => array(
      
        'name' => 'product_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                          ),
      
              'contribution_id' => array(
      
        'name' => 'contribution_id',
        'type' => CRM_Utils_Type::T_INT,
                        'required' => true,
                                             
                                    
                'FKClassName' => 'CRM_Contribute_Contribution',
                          ),
      
              'product_option' => array(
      
        'name' => 'product_option',
        'type' => CRM_Utils_Type::T_STRING,
                'title' => ts('Product Option'),
                                 'maxlength' => 255,
                         'size' => CRM_Utils_Type::HUGE,
                           
                         'export' => true,
                'where' => 'civicrm_contribution_product.product_option',
        'headerPattern' => '',
        'dataPattern' => '',
                                   
                          ),
      
              'quantity' => array(
      
        'name' => 'quantity',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Quantity'),
                                                     
                         'export' => true,
                'where' => 'civicrm_contribution_product.quantity',
        'headerPattern' => '',
        'dataPattern' => '',
                                   
                          ),
      
              'fulfilled_date' => array(
      
        'name' => 'fulfilled_date',
        'type' => CRM_Utils_Type::T_DATE,
                'title' => ts('Fulfilled Date'),
                                                     
                         'export' => true,
                'where' => 'civicrm_contribution_product.fulfilled_date',
        'headerPattern' => '',
        'dataPattern' => '',
                                   
                          ),
      
              'contribution_start_date' => array(
      
        'name' => 'start_date',
        'type' => CRM_Utils_Type::T_DATE,
                'title' => ts('Start Date'),
                                                     
                         'export' => true,
                'where' => 'civicrm_contribution_product.start_date',
        'headerPattern' => '',
        'dataPattern' => '',
                                   
                          ),
      
              'contribution_end_date' => array(
      
        'name' => 'end_date',
        'type' => CRM_Utils_Type::T_DATE,
                'title' => ts('End Date'),
                                                     
                         'export' => true,
                'where' => 'civicrm_contribution_product.end_date',
        'headerPattern' => '',
        'dataPattern' => '',
                                   
                          ),
      
              'comment' => array(
      
        'name' => 'comment',
        'type' => CRM_Utils_Type::T_TEXT,
                'title' => ts('Comment'),
                                                     
                                    
                          ),
      
              'financial_type_id' => array(
      
        'name' => 'financial_type_id',
        'type' => CRM_Utils_Type::T_INT,
                'title' => ts('Financial Type'),
                                                     
                                           'default' => 'NULL',
         
                'FKClassName' => 'CRM_Financial_FinancialType',
                          ),
             );
    }
    return self::$_fields;
  }

}

