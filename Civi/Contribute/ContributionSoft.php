<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.4                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2013                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * Generated from xml/schema/CRM/Contribute/ContributionSoft.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */

namespace Civi\Core;

use Doctrine\ORM\Mapping as ORM;

/**
 * ContributionSoft
 *
 * @ORM\Table(name="civicrm_contribution_soft", indexes={@ORM\Index(name="index_id", columns={"pcp_id"}),@ORM\Index(name="FK_civicrm_contribution_soft_contribution_id", columns={"contribution_id"}),@ORM\Index(name="FK_civicrm_contribution_soft_contact_id", columns={"contact_id"}),@ORM\Index(name="FK_civicrm_contribution_soft_pcp_id", columns={"pcp_id"})})
 * @ORM\Entity
 */
class ContributionSoft extends \Civi\Core\Entity {

  /**
   * @var integer
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;
    
  /**
   * @var \Civi\Contribute\Contribution
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contribute\Contribution")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contribution_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $contribution;
  
  /**
   * @var \Civi\Contact\Contact
   *
   * @ORM\ManyToOne(targetEntity="Civi\Contact\Contact")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="contact_id", referencedColumnName="id", onDelete="CASCADE")})
   */
  private $contact;
  
  /**
   * @var float
   *
   * @ORM\Column(name="amount", type="float", nullable=true)
   * 
   */
  private $amount;
  
  /**
   * @var string
   *
   * @ORM\Column(name="currency", type="string", length=3, nullable=false)
   * 
   */
  private $currency = 'NULL';
  
  /**
   * @var \Civi\PCP\PCP
   *
   * @ORM\ManyToOne(targetEntity="Civi\PCP\PCP")
   * @ORM\JoinColumns({@ORM\JoinColumn(name="pcp_id", referencedColumnName="id", onDelete="SET NULL")})
   */
  private $pcp = 'NULL';
  
  /**
   * @var boolean
   *
   * @ORM\Column(name="pcp_display_in_roll", type="boolean", nullable=false)
   * 
   */
  private $pcpDisplayInRoll = '0';
  
  /**
   * @var string
   *
   * @ORM\Column(name="pcp_roll_nickname", type="string", length=255, nullable=false)
   * 
   */
  private $pcpRollNickname = 'NULL';
  
  /**
   * @var string
   *
   * @ORM\Column(name="pcp_personal_note", type="string", length=255, nullable=false)
   * 
   */
  private $pcpPersonalNote = 'NULL';
  
  /**
   * @var integer
   *
   * @ORM\Column(name="soft_credit_type_id", type="integer", nullable=false)
   * 
   */
  private $softCreditTypeId = 'NULL';

  /**
   * Get id
   *
   * @return integer
   */
  public function getId() {
    return $this->id;
  }
    
  /**
   * Set contribution
   *
   * @param \Civi\Contribute\Contribution $contribution
   * @return ContributionSoft
   */
  public function setContribution(\Civi\Contribute\Contribution $contribution = null) {
    $this->contribution = $contribution;
    return $this;
  }

  /**
   * Get contribution
   *
   * @return \Civi\Contribute\Contribution
   */
  public function getContribution() {
    return $this->contribution;
  }
  
  /**
   * Set contact
   *
   * @param \Civi\Contact\Contact $contact
   * @return ContributionSoft
   */
  public function setContact(\Civi\Contact\Contact $contact = null) {
    $this->contact = $contact;
    return $this;
  }

  /**
   * Get contact
   *
   * @return \Civi\Contact\Contact
   */
  public function getContact() {
    return $this->contact;
  }
  
  /**
   * Set amount
   *
   * @param float $amount
   * @return ContributionSoft
   */
  public function setAmount($amount) {
    $this->amount = $amount;
    return $this;
  }

  /**
   * Get amount
   *
   * @return float
   */
  public function getAmount() {
    return $this->amount;
  }
  
  /**
   * Set currency
   *
   * @param string $currency
   * @return ContributionSoft
   */
  public function setCurrency($currency) {
    $this->currency = $currency;
    return $this;
  }

  /**
   * Get currency
   *
   * @return string
   */
  public function getCurrency() {
    return $this->currency;
  }
  
  /**
   * Set pcp
   *
   * @param \Civi\PCP\PCP $pcp
   * @return ContributionSoft
   */
  public function setPcp(\Civi\PCP\PCP $pcp = null) {
    $this->pcp = $pcp;
    return $this;
  }

  /**
   * Get pcp
   *
   * @return \Civi\PCP\PCP
   */
  public function getPcp() {
    return $this->pcp;
  }
  
  /**
   * Set pcpDisplayInRoll
   *
   * @param boolean $pcpDisplayInRoll
   * @return ContributionSoft
   */
  public function setPcpDisplayInRoll($pcpDisplayInRoll) {
    $this->pcpDisplayInRoll = $pcpDisplayInRoll;
    return $this;
  }

  /**
   * Get pcpDisplayInRoll
   *
   * @return boolean
   */
  public function getPcpDisplayInRoll() {
    return $this->pcpDisplayInRoll;
  }
  
  /**
   * Set pcpRollNickname
   *
   * @param string $pcpRollNickname
   * @return ContributionSoft
   */
  public function setPcpRollNickname($pcpRollNickname) {
    $this->pcpRollNickname = $pcpRollNickname;
    return $this;
  }

  /**
   * Get pcpRollNickname
   *
   * @return string
   */
  public function getPcpRollNickname() {
    return $this->pcpRollNickname;
  }
  
  /**
   * Set pcpPersonalNote
   *
   * @param string $pcpPersonalNote
   * @return ContributionSoft
   */
  public function setPcpPersonalNote($pcpPersonalNote) {
    $this->pcpPersonalNote = $pcpPersonalNote;
    return $this;
  }

  /**
   * Get pcpPersonalNote
   *
   * @return string
   */
  public function getPcpPersonalNote() {
    return $this->pcpPersonalNote;
  }
  
  /**
   * Set softCreditTypeId
   *
   * @param integer $softCreditTypeId
   * @return ContributionSoft
   */
  public function setSoftCreditTypeId($softCreditTypeId) {
    $this->softCreditTypeId = $softCreditTypeId;
    return $this;
  }

  /**
   * Get softCreditTypeId
   *
   * @return integer
   */
  public function getSoftCreditTypeId() {
    return $this->softCreditTypeId;
  }

}

