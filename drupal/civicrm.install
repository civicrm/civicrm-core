<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 5                                                  |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2019                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
 */

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2019
 * $Id$
 *
 */

/**
 * Enable CiviCRM.
 */
function civicrm_enable() {
  db_query("UPDATE {system} SET weight = 100 WHERE name = 'civicrm'");

  menu_rebuild();

  menu_link_maintain('civicrm', 'delete', 'civicrm', 'CiviCRM');

  $options = array(
    'link_title' => 'CiviCRM',
    'link_path' => 'civicrm/dashboard',
    'module' => 'civicrm',
    'options' => array('alter' => TRUE),
  );
  menu_link_save($options);

  if (!civicrm_initialize()) {
    return;
  }

  // also invoke civicrm menu rebuild
  CRM_Core_Menu::store();

  // Update the 'blocks' DB table with the blocks.
  if (module_exists('block')) {
    _block_rehash();
  }
}

/**
 * Implements hook_uninstall().
 */
function civicrm_uninstall() {
  require_once 'civicrm.module';

  if (!civicrm_initialize()) {
    return;
  }

  require_once 'CRM/Core/Config.php';
  $config = CRM_Core_Config::singleton();

  require_once 'CRM/Core/DAO.php';
  CRM_Core_DAO::dropAllTables();
}

function civicrm_requirements($phase) {
  global $base_url;
  $civicrm_path = drupal_get_path('module', 'civicrm');

  //remove the last occurrence of 'drupal' from path
  $pos = strrpos($civicrm_path, 'drupal');

  if ($pos !== FALSE) {
    $civicrm_path = substr_replace($civicrm_path, '', $pos, strlen($civicrm_path));
  }

  $url = $base_url . '/' . $civicrm_path . 'install/index.php';

  $settings = glob('sites/*/civicrm.settings.php');
  $problems = array();
  $t = get_t();
  if (empty($settings) && $phase == 'install') {
    $problems[] = array(
      'title' => $t('CiviCRM settings does not exist'),
      'value' =>
      $t('CiviCRM settings file does not exist. It should be created by CiviCRM <a href="!link">install</a>',
        array('!link' => $url)),
      'severity' => REQUIREMENT_ERROR,
    );
  }

  return $problems;
}

/**
 * Update CiviCRM module weight
 */
function civicrm_update_7400(&$sandbox) {
  db_query("UPDATE {system} SET weight = 100 WHERE name = 'civicrm'");
}

/**
 * Trigger cache clear to pick up TZ handling change from CRM-6877.
 */
function civicrm_update_7401($sandbox) {
  // This is an empty hook_update_N() so that caches will be
  // cleared when update_finished() is called.
  return t('TZ changes in CiviCRM Views picked up.');
}
