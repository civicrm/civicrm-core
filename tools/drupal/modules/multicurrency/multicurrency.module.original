<?php

/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.7                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2016                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007.                                       |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License along with this program; if not, contact CiviCRM LLC       |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2016
 * $Id$
 *
 */

define( 'MULTICURRENCY_EVENT_ID', 4 );

function multicurrency_civicrm_buildForm( $formName,
            &$form ) {
    if ( ( strpos( $formName, 'CRM_Event_Form_Registration_' ) !== false ) &&
   ( $form->getVar( '_eventId' ) == MULTICURRENCY_EVENT_ID ) ) {
      multicurrency_set_currency( $form );
    }
}

function multicurrency_set_currency( &$form ) {
    static $processed = false;

    if ( $processed ) {
        return;
    }

    $processed = true;
    $currency  = CRM_Utils_Request::retrieve( 'currency', 'String', $form, false, 'GBP' );
    $config    =& CRM_Core_Config::singleton( );
    if ( strtoupper( $currency ) == 'EUR' ) {
        $config->defaultCurrency = 'EUR';
    } else {
        $config->defaultCurrency = 'GBP';
    }

    return $config->defaultCurrency;
}

function multicurrency_civicrm_buildAmount( $pageType,
              &$form,
              &$amount ) {

  // only modify the event pages for the UK event
  if ( $form->getVar( '_eventId' ) == MULTICURRENCY_EVENT_ID ) {
    $currency = multicurrency_set_currency( $form );

    // as of may 5th: 1 USD = 0.75 EUR, 1 USD = 0.667 GBP
    $ratio = ( $currency == 'EUR' ) ? 0.75 : ( 2.0 / 3.0 );

    foreach ( $amount as $amountID =>& $amountInfo ) {
      $amountInfo['value'] = ceil( $amountInfo['value'] * $ratio );
    }
  }
}

function multicurrency_civicrm_pageRun( &$page ) {

  if ( $page->getVar( '_name' ) == 'CRM_Event_Page_EventInfo' &&
       $page->getVar( '_id' )   == MULTICURRENCY_EVENT_ID ) {
    multicurrency_set_currency( $page );
  }

}

