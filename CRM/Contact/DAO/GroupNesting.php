<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from xml/schema/CRM/Contact/GroupNesting.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:659840b7a7904852b3e352131af7d380)
 */

/**
 * Database access object for the GroupNesting entity.
 */
class CRM_Contact_DAO_GroupNesting extends CRM_Core_DAO {
  const EXT = 'civicrm';
  const TABLE_ADDED = '2.0';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_group_nesting';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Relationship ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * ID of the child group
   *
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $child_group_id;

  /**
   * ID of the parent group
   *
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $parent_group_id;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_group_nesting';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? ts('Group Nestings') : ts('Group Nesting');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Group Nesting ID'),
          'description' => ts('Relationship ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_group_nesting.id',
          'table_name' => 'civicrm_group_nesting',
          'entity' => 'GroupNesting',
          'bao' => 'CRM_Contact_BAO_GroupNesting',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => '2.0',
        ],
        'child_group_id' => [
          'name' => 'child_group_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Child Group ID'),
          'description' => ts('ID of the child group'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_group_nesting.child_group_id',
          'table_name' => 'civicrm_group_nesting',
          'entity' => 'GroupNesting',
          'bao' => 'CRM_Contact_BAO_GroupNesting',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Group',
          'FKColumnName' => 'id',
          'html' => [
            'label' => ts("Child Group"),
          ],
          'add' => '2.0',
        ],
        'parent_group_id' => [
          'name' => 'parent_group_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Parent Group ID'),
          'description' => ts('ID of the parent group'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_group_nesting.parent_group_id',
          'table_name' => 'civicrm_group_nesting',
          'entity' => 'GroupNesting',
          'bao' => 'CRM_Contact_BAO_GroupNesting',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Group',
          'FKColumnName' => 'id',
          'html' => [
            'label' => ts("Parent Group"),
          ],
          'add' => '2.0',
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'group_nesting', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'group_nesting', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
